import os

Import('*')

#####################
# Delcare src files #
#####################

if CheckForBoost() :

   pythonDtCoreSrcs = [    'basebindings.cpp',
                           'camerabindings.cpp',
                           'clouddomebindings.cpp',
                           'cloudplanebindings.cpp',
                           'compassbindings.cpp',
                           'deltadrawablebindings.cpp',
                           'deltawinbindings.cpp',
                           'dtcorebindings.cpp',
                           'effectmanagerbindings.cpp',
                           'enveffectbindings.cpp',
                           'environmentbindings.cpp',
                           'flymotionmodelbindings.cpp',
                           'infinitelightbindings.cpp',
                           'infiniteterrainbindings.cpp',
                           'inputdevicebindings.cpp',
                           'inputmapperbindings.cpp',
                           'isectorbindings.cpp',
                           'joystickbindings.cpp',
                           'keyboardbindings.cpp',
                           'lightbindings.cpp',
                           'loadablebindings.cpp',
                           'logicalinputdevicebindings.cpp',
                           'motionmodelbindings.cpp',
                           'mousebindings.cpp',
                           'noisegeneratorbindings.cpp',
                           'objectbindings.cpp',
                           'orbitmotionmodelbindings.cpp',
                           'particlesystembindings.cpp',
                           'physicalbindings.cpp',
                           'pointaxisbindings.cpp',
                           'positionallightbindings.cpp',
                           'recorderbindings.cpp',
                           'scenebindings.cpp',
                           'skyboxbindings.cpp',
                           'skydomebindings.cpp',
                           'spotlightbindings.cpp',
                           'systembindings.cpp',
                           'terrainbindings.cpp',
                           'trackerbindings.cpp',
                           'transformablebindings.cpp',
                           'transformbindings.cpp',
                           'tripodbindings.cpp',
                           'ufomotionmodelbindings.cpp',
                           'uidrawablebindings.cpp',
                           'walkmotionmodelbindings.cpp' ]
   
   pythonDtAbcSrcs = [ 'applicationbindings.cpp', 'baseabcbindings.cpp', 'dtabcbindings.cpp', 'weatherbindings.cpp', 'widgetbindings.cpp' ]
    
   pythonDtAudioSrcs = [ 'audiomanagerbindings.cpp', 'dtaudiobindings.cpp', 'listenerbindings.cpp', 'soundeffectbinderbindings.cpp' ]
    
   pythonDtCharSrcs = [ 'characterbindings.cpp', 'dtcharbindings.cpp' ]
    
   pythonGui_flSrcs = [ 'dtguiflbindings.cpp' ]
    
   pythonDtHlaSrcs = [ 'distypebindings.cpp', 'dthlabindings.cpp', 'entitybindings.cpp', 'rticonnectionbindings.cpp' ]
    
   pythonDtSoarxSrcs = [ 'dtsoarxbindings.cpp', 'soarxterrainbindings.cpp' ]
    
   ##############
   # Build libs #
   ##############
      
   if OS == 'windows' and mode == 'debug' :
      boostLib = 'boost_python_debug'
   else :
      boostLib = 'boost_python'

   pythonDeps = [ 'python' ]
   
   if OS == 'windows' :
      pythonDeps += [  'User32' ] 
      
   pythonDeps = [ extLibs[lib] for lib in pythonDeps if extLibs.has_key(lib) ] + [boostLib]

   pythonDtCoreLib = env.SharedLibrary( 'dtcorebindings', pythonDtCoreSrcs, LIBS = pythonDeps + [dtLibs[ 'dtcore']] )
   pythonDtAbcLib = env.SharedLibrary( 'dtabcbindings', pythonDtAbcSrcs, LIBS = pythonDeps + [dtLibs[ 'dtabc' ]] )
   pythonDtAudioLib = env.SharedLibrary( 'dtaudiobindings', pythonDtAudioSrcs, LIBS = pythonDeps + [dtLibs[ 'dtaudio' ]] )
   pythonDtCharLib = env.SharedLibrary( 'dtcharbindings', pythonDtCharSrcs, LIBS = pythonDeps + [dtLibs[ 'dtchar' ]] )
   pythonGui_flLib = env.SharedLibrary( 'gui_flbindings', pythonGui_flSrcs, LIBS = pythonDeps + [dtLibs[ 'gui_fl' ]] )

   env.Precious( pythonDtCoreLib, pythonDtAbcLib, pythonDtAudioLib, pythonDtCharLib, pythonGui_flLib )
   
   if env.get('rti') != 0 :
      pythonDtHlaLib = env.SharedLibrary( 'dthlabindings', pythonDtHlaSrcs, LIBS = pythonDeps + [dtLibs[ 'dthla' ]] )
      env.Precious( pythonDtHlaLib )
   else :
      pythonDtHlaLib = None

   if OS == 'windows' :
      pythonDtSoarxLib = env.SharedLibrary( 'dtsoarxbindings', pythonDtSoarxSrcs, LIBS = pythonDeps + [dtLibs[ 'dtsoarx' ]] )
      env.Precious( pythonDtSoarxLib )

   ################
   # Install libs #
   ################

   if OS == 'windows' :
      dir = 'bin'
      suffix = 'pyd'
   else :
      dir = 'lib'
      suffix = 'so'

   env.InstallAs( [  os.path.join('#',dir,'dtCore.'+suffix), \
                     os.path.join('#',dir,'dtABC.'+suffix), \
                     os.path.join('#',dir,'dtAudio.'+suffix), \
                     os.path.join('#',dir,'dtChar.'+suffix), \
                     os.path.join('#',dir,'dtGUIFl.'+suffix) ], \
                  [  pythonDtCoreLib[0], \
                     pythonDtAbcLib[0], \
                     pythonDtAudioLib[0], \
                     pythonDtCharLib[0], \
                     pythonGui_flLib[0] ] )

   if pythonDtHlaLib is not None:
         env.InstallAs( os.path.join('#',dir, 'dtHLA.'.join(suffix)), pythonDtHlaLib[0] )

   if OS == 'windows' :
      
      env.InstallAs( os.path.join('#', dir, 'dtSOARX.'.join(suffix)) , pythonDtSoarxLib[0] )
      
      env.Install( '#/lib', [ pythonDtCoreLib[1:], \
                              pythonDtAbcLib[1:], \
                              pythonDtAudioLib[1:], \
                              pythonDtCharLib[1:], \
                              pythonGui_flLib[1:], \
                              pythonDtSoarxLib[1:] ] )

      if pythonDtHlaLib is not None:
         env.Install( '#/bin', pythonDtHlaLib[1:] )

""" 
   if OS == 'windows':
      env.InstallAs( [  '#/bin/dtCore.pyd', \
                        '#/bin/dtABC.pyd', \
                        '#/bin/dtAudio.pyd', \
                        '#/bin/dtChar.pyd', \
                        '#/bin/dtGUIFl.pyd', \
                        '#/bin/dtSOARX.pyd' ], \
                     [  pythonDtCoreLib[0], \
                        pythonDtAbcLib[0], \
                        pythonDtAudioLib[0], \
                        pythonDtCharLib[0], \
                        pythonGui_flLib[0], \
                        pythonDtSoarxLib[0] ] )  
                        
      env.Install( '#/lib', [ pythonDtCoreLib[1:], \
                              pythonDtAbcLib[1:], \
                              pythonDtAudioLib[1:], \
                              pythonDtCharLib[1:], \
                              pythonGui_flLib[1:], \
                              pythonDtSoarxLib[1:] ] )

      if pythonDtHlaLib is not None:
         env.InstallAs( '#/bin/dtHLA.pyd', pythonDtHlaLib[0] )
         env.Install( '#/bin', pythonDtHlaLib[1:] )
               
   elif OS == 'linux':

      print pythonDtCoreLib[0]

      env.InstallAs( [  '#/lib/dtCore.so', \
                        '#/lib/dtABC.so', \
                        '#/lib/dtAudio.so', \
                        '#/lib/dtChar.so', \
                        '#/lib/dtGUIFl.so' ], \
                     [ pythonDtCoreLib, \
                       pythonDtAbcLib, \
                       pythonDtAudioLib, \
                       pythonDtCharLib, \
                       pythonGui_flLib ] ) 
        
      if pythonDtHlaLib is not None:
         env.InstallAs( '#/lib/dtHLA.so', pythonDtHlaLib )
            
      #env.InstallAs( '#/lib/dtSOARX.so', pythonDtSoarxLib )
"""    
