#include <prefix/dtcoreprefix-src.h>
#include <dtCore/timer.h>
#include <dtUtil/macros.h>
#include <OpenThreads/Thread>

namespace dtCore
{

//////////////////////////////////////////////////////////////////////////
Timer::Timer()
{

}

//////////////////////////////////////////////////////////////////////////
Timer::~Timer()
{

}

//////////////////////////////////////////////////////////////////////////
const Timer* Timer::Instance()
{
   static Timer sTimer;
   return &sTimer;
}

//////////////////////////////////////////////////////////////////////////
Timer_t Timer::Tick() const
{
   return mTimer.tick();
}

//////////////////////////////////////////////////////////////////////////
double Timer::DeltaSec(Timer_t t1, Timer_t t2) const
{
   return mTimer.delta_s(t1, t2);
}

//////////////////////////////////////////////////////////////////////////
double Timer::DeltaMil(Timer_t t1, Timer_t t2) const
{
   return mTimer.delta_m(t1, t2);
}

//////////////////////////////////////////////////////////////////////////
double Timer::DeltaMicro(Timer_t t1, Timer_t t2) const
{
   return mTimer.delta_u(t1, t2);
}

//////////////////////////////////////////////////////////////////////////
double Timer::DeltaNano(Timer_t t1, Timer_t t2) const
{
   return mTimer.delta_n(t1, t2);
}

//////////////////////////////////////////////////////////////////////////
double Timer::GetSecondsPerTick() const
{
   return mTimer.getSecondsPerTick();
}

//////////////////////////////////////////////////////////////////////////
double Timer::ElapsedSeconds() const
{
   return mTimer.time_s();
}

//////////////////////////////////////////////////////////////////////////
double Timer::ElapsedMilliseconds() const
{
   return mTimer.time_m();
}

//////////////////////////////////////////////////////////////////////////
double Timer::ElapsedMicroseconds() const
{
   return mTimer.time_u();
}

//////////////////////////////////////////////////////////////////////////
double Timer::ElapsedNanoseconds() const
{
   return mTimer.time_n();
}

//////////////////////////////////////////////////////////////////////////
void AppSleep(unsigned int milliseconds)
{
   OpenThreads::Thread::microSleep(milliseconds * 1000);
}

}//namespace dtCore

