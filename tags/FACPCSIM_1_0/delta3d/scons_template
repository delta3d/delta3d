###################################################
# SCons Build Script Template                     #
#                                                 #
# Use this script as an example of how to build   #
# your own apps outside the Delta3D source tree.  #
# Just rename this as SConstruct in your app's    #
# directory or just use 'scons -f scons_template. #
###################################################
      
import os 
import SCons.Util

env = Environment()

# append the outside env to ours
for K in os.environ.keys():
   if K in env['ENV'].keys() and K in [ 'DELTA_ROOT', 'DELTA_INC', 'DELTA_LIB' ]:
      env['ENV'][K] = SCons.Util.AppendPath( env['ENV'][K], os.environ[K] )
   else:
      env['ENV'][K] = os.environ[K]

# add the Visual Studio paths
if os.sys.platform == 'win32' :
   if os.environ.has_key( 'INCLUDE' ) :
     env.Append( CPPPATH = env['ENV']['INCLUDE'].split(os.pathsep) )
   if os.environ.has_key( 'LIB' ) :
     env.Append( LIBPATH = env['ENV']['LIB'].split(os.pathsep) )

# set compiler options
env.Append( CPPPATH    = [ '/usr/X11R6/include' ] + env['ENV']['DELTA_INC'].split( os.pathsep ) ) 
env.Append( CXXDEFINES = ['SIGSLOT_PURE_ISO'] ) # for debug mode, add 'DEBUG' and '_DEBUG'
env.Append( CXXFLAGS   = [ '-O2', '-pipe', '-Wall' ]) # for debug mode, add '-g' and replace '-O2' with 'O0'
env.Append( LIBPATH    = [ '/usr/X11R6/lib' ] + env['ENV']['DELTA_LIB'].split( os.pathsep) ) 

# source files
srcs = []

# list your lib dependencies here
deps = []

# build it!
if len(srcs) is not 0 and len(deps) is not 0 :
   env.Program( 'myapp', srcs, LIBS = deps )
else :
   print 'error: add some source files and dependencies...'
