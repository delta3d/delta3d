// generated by Fast Light User Interface Designer (fluid) version 1.0109

#include "psEditorGUI.h"

Fl_Menu_Item UserInterface::menu_MainMenu[] = {
 {"&File", 0,  0, 0, 64, FL_NORMAL_LABEL, 0, 14, 0},
 {"&New", 0,  (Fl_Callback*)psEditorGUI_New, 0, 0, FL_NORMAL_LABEL, 0, 14, 0},
 {"&Open...", 0,  (Fl_Callback*)psEditorGUI_Open, 0, 0, FL_NORMAL_LABEL, 0, 14, 0},
 {"Open &Previous", 0,  0, 0, 64, FL_NORMAL_LABEL, 0, 14, 0},
 {"item", 0,  0, 0, 0, FL_NORMAL_LABEL, 0, 14, 0},
 {"item", 0,  0, 0, 0, FL_NORMAL_LABEL, 0, 14, 0},
 {"item", 0,  0, 0, 0, FL_NORMAL_LABEL, 0, 14, 0},
 {"item", 0,  0, 0, 0, FL_NORMAL_LABEL, 0, 14, 0},
 {"item", 0,  0, 0, 0, FL_NORMAL_LABEL, 0, 14, 0},
 {0,0,0,0,0,0,0,0,0},
 {"&Import...", 0,  (Fl_Callback*)psEditorGUI_Import, 0, 128, FL_NORMAL_LABEL, 0, 14, 0},
 {"&Load Reference...", 0,  (Fl_Callback*)psEditorGUI_LoadReference, 0, 128, FL_NORMAL_LABEL, 0, 14, 0},
 {"&Save", 0,  (Fl_Callback*)psEditorGUI_Save, 0, 0, FL_NORMAL_LABEL, 0, 14, 0},
 {"Save &As...", 0,  (Fl_Callback*)psEditorGUI_SaveAs, 0, 128, FL_NORMAL_LABEL, 0, 14, 0},
 {"&Quit", 0,  (Fl_Callback*)psEditorGUI_Quit, 0, 0, FL_NORMAL_LABEL, 0, 14, 0},
 {0,0,0,0,0,0,0,0,0},
 {"&View", 0,  0, 0, 64, FL_NORMAL_LABEL, 0, 14, 0},
 {"&Compass", 0,  (Fl_Callback*)psEditorGUI_Compass, 0, 128, FL_NORMAL_LABEL, 0, 14, 0},
 {"&XY Grid", 0,  (Fl_Callback*)psEditorGUI_XYGrid, 0, 0, FL_NORMAL_LABEL, 0, 14, 0},
 {"&YZ Grid", 0,  (Fl_Callback*)psEditorGUI_YZGrid, 0, 0, FL_NORMAL_LABEL, 0, 14, 0},
 {"X&Z Grid", 0,  (Fl_Callback*)psEditorGUI_XZGrid, 0, 0, FL_NORMAL_LABEL, 0, 14, 0},
 {0,0,0,0,0,0,0,0,0},
 {0,0,0,0,0,0,0,0,0}
};

#include <FL/Fl_Image.H>
static unsigned char idata_newlayer[] =
{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
142,142,142,255,162,162,162,255,162,162,162,255,162,162,162,255,162,162,162,255,
162,162,162,255,162,162,162,255,162,162,162,255,162,162,162,255,162,162,162,255,
162,162,162,255,162,162,162,255,162,162,162,255,157,157,157,255,157,157,157,255,
157,157,157,255,157,157,157,255,152,152,152,255,152,152,152,255,152,152,152,255,
157,157,157,255,55,55,55,255,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,229,229,229,255,255,255,255,255,255,255,255,255,
255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,
255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,
255,255,255,255,252,252,252,255,249,249,249,255,249,249,249,255,245,245,245,255,
245,245,245,255,241,241,241,255,252,252,252,255,89,89,89,255,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,222,222,222,255,
255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,
255,255,255,255,255,255,255,255,252,252,252,255,252,252,252,255,249,249,249,255,
249,249,249,255,245,245,245,255,245,245,245,255,241,241,241,255,237,237,237,255,
237,237,237,255,237,237,237,255,232,232,232,255,229,229,229,255,237,237,237,255,
75,75,75,255,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,222,222,222,255,255,255,255,255,255,255,255,255,255,255,255,255,
255,255,255,255,255,255,255,255,255,255,255,255,252,252,252,255,252,252,252,255,
249,249,249,255,249,249,249,255,245,245,245,255,245,245,245,255,241,241,241,255,
237,237,237,255,237,237,237,255,232,232,232,255,232,232,232,255,229,229,229,255,
225,225,225,255,237,237,237,255,75,75,75,255,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,222,222,222,255,255,255,255,255,
255,255,255,255,255,255,255,255,255,255,255,255,252,252,252,255,252,252,252,255,
249,249,249,255,249,249,249,255,249,249,249,255,245,245,245,255,245,245,245,255,
241,241,241,255,237,237,237,255,237,237,237,255,232,232,232,255,232,232,232,255,
229,229,229,255,225,225,225,255,225,225,225,255,232,232,232,255,75,75,75,255,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
222,222,222,255,255,255,255,255,255,255,255,255,255,255,255,255,252,252,252,255,
252,252,252,255,249,249,249,255,249,249,249,255,249,249,249,255,245,245,245,255,
245,245,245,255,241,241,241,255,237,237,237,255,237,237,237,255,232,232,232,255,
232,232,232,255,229,229,229,255,225,225,225,255,225,225,225,255,220,220,220,255,
229,229,229,255,75,75,75,255,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,222,222,222,255,255,255,255,255,255,255,255,255,
252,252,252,255,252,252,252,255,249,249,249,255,249,249,249,255,245,245,245,255,
245,245,245,255,241,241,241,255,241,241,241,255,237,237,237,255,237,237,237,255,
232,232,232,255,232,232,232,255,229,229,229,255,225,225,225,255,222,222,222,255,
220,220,220,255,218,218,218,255,225,225,225,255,75,75,75,255,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,222,222,222,255,
255,255,255,255,252,252,252,255,252,252,252,255,249,249,249,255,249,249,249,255,
245,245,245,255,245,245,245,255,241,241,241,255,241,241,241,255,237,237,237,255,
237,237,237,255,232,232,232,255,232,232,232,255,229,229,229,255,225,225,225,255,
222,222,222,255,220,220,220,255,218,218,218,255,216,216,216,255,225,225,225,255,
75,75,75,255,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,222,222,222,255,255,255,255,255,252,252,252,255,249,249,249,255,
249,249,249,255,245,245,245,255,245,245,245,255,241,241,241,255,241,241,241,255,
237,237,237,255,237,237,237,255,232,232,232,255,229,229,229,255,229,229,229,255,
225,225,225,255,222,222,222,255,220,220,220,255,218,218,218,255,216,216,216,255,
213,213,213,255,222,222,222,255,75,75,75,255,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,220,220,220,255,255,255,255,255,
249,249,249,255,249,249,249,255,245,245,245,255,245,245,245,255,241,241,241,255,
237,237,237,255,237,237,237,255,237,237,237,255,232,232,232,255,229,229,229,255,
225,225,225,255,225,225,225,255,222,222,222,255,220,220,220,255,218,218,218,255,
216,216,216,255,213,213,213,255,213,213,213,255,220,220,220,255,75,75,75,255,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
220,220,220,255,255,255,255,255,249,249,249,255,245,245,245,255,245,245,245,255,
241,241,241,255,237,237,237,255,237,237,237,255,237,237,237,255,232,232,232,255,
229,229,229,255,225,225,225,255,225,225,225,255,222,222,222,255,220,220,220,255,
218,218,218,255,216,216,216,255,213,213,213,255,210,210,210,255,210,210,210,255,
220,220,220,255,75,75,75,255,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,229,229,229,255,255,255,255,255,255,255,255,255,
252,252,252,255,249,249,249,255,245,245,245,255,245,245,245,255,241,241,241,255,
237,237,237,255,232,232,232,255,225,225,225,255,225,225,225,255,220,220,220,255,
220,220,220,255,218,218,218,255,216,216,216,255,213,213,213,255,210,210,210,255,
210,210,210,255,209,209,209,255,220,220,220,255,75,75,75,255,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,115,115,115,255,
157,157,157,255,152,152,152,255,152,152,152,255,157,157,157,255,157,157,157,255,
157,157,157,255,157,157,157,255,152,152,152,255,184,184,184,255,229,229,229,255,
220,220,220,255,220,220,220,255,216,216,216,255,213,213,213,255,213,213,213,255,
210,210,210,255,210,210,210,255,209,209,209,255,209,209,209,255,220,220,220,255,
75,75,75,255,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,75,75,75,255,115,115,115,255,157,157,157,255,170,170,170,255,
184,184,184,255,202,202,202,255,216,216,216,255,232,232,232,255,210,210,210,255,
142,142,142,255,220,220,220,255,218,218,218,255,216,216,216,255,213,213,213,255,
213,213,213,255,210,210,210,255,209,209,209,255,209,209,209,255,209,209,209,255,
209,209,209,255,220,220,220,255,75,75,75,255,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,202,202,202,255,99,99,99,255,
125,125,125,255,170,170,170,255,184,184,184,255,202,202,202,255,216,216,216,255,
237,237,237,255,220,220,220,255,125,125,125,255,202,202,202,255,216,216,216,255,
213,213,213,255,213,213,213,255,210,210,210,255,209,209,209,255,209,209,209,255,
209,209,209,255,209,209,209,255,209,209,209,255,220,220,220,255,75,75,75,255,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
222,222,222,255,225,225,225,255,99,99,99,255,125,125,125,255,162,162,162,255,
170,170,170,255,195,195,195,255,213,213,213,255,202,202,202,255,125,125,125,255,
202,202,202,255,213,213,213,255,213,213,213,255,210,210,210,255,209,209,209,255,
209,209,209,255,209,209,209,255,209,209,209,255,209,209,209,255,209,209,209,255,
220,220,220,255,75,75,75,255,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,225,225,225,255,255,255,255,255,218,218,218,255,
99,99,99,255,115,115,115,255,157,157,157,255,170,170,170,255,195,195,195,255,
184,184,184,255,115,115,115,255,195,195,195,255,210,210,210,255,210,210,210,255,
209,209,209,255,209,209,209,255,209,209,209,255,209,209,209,255,209,209,209,255,
209,209,209,255,209,209,209,255,220,220,220,255,75,75,75,255,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,222,222,222,255,
255,255,255,255,255,255,255,255,218,218,218,255,99,99,99,255,115,115,115,255,
152,152,152,255,170,170,170,255,162,162,162,255,115,115,115,255,195,195,195,255,
209,209,209,255,210,210,210,255,209,209,209,255,209,209,209,255,209,209,209,255,
209,209,209,255,209,209,209,255,209,209,209,255,209,209,209,255,220,220,220,255,
75,75,75,255,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,222,222,222,255,255,255,255,255,255,255,255,255,255,255,255,255,
218,218,218,255,99,99,99,255,115,115,115,255,152,152,152,255,142,142,142,255,
115,115,115,255,195,195,195,255,209,209,209,255,210,210,210,255,209,209,209,255,
209,209,209,255,209,209,209,255,209,209,209,255,209,209,209,255,209,209,209,255,
209,209,209,255,220,220,220,255,75,75,75,255,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,222,222,222,255,255,255,255,255,
255,255,255,255,255,255,255,255,255,255,255,255,218,218,218,255,99,99,99,255,
115,115,115,255,125,125,125,255,115,115,115,255,195,195,195,255,209,209,209,255,
210,210,210,255,209,209,209,255,209,209,209,255,209,209,209,255,209,209,209,255,
209,209,209,255,209,209,209,255,209,209,209,255,220,220,220,255,75,75,75,255,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
232,232,232,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,
255,255,255,255,225,225,225,255,99,99,99,255,99,99,99,255,115,115,115,255,202,
202,202,255,220,220,220,255,220,220,220,255,220,220,220,255,220,220,220,255,220,
220,220,255,220,220,220,255,220,220,220,255,220,220,220,255,220,220,220,255,232,
232,232,255,75,75,75,255,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,184,184,184,255,213,213,213,255,213,213,213,255,213,
213,213,255,213,213,213,255,213,213,213,255,210,210,210,255,184,184,184,255,55,
55,55,255,75,75,75,255,142,142,142,255,152,152,152,255,152,152,152,255,152,152,
152,255,152,152,152,255,152,152,152,255,152,152,152,255,152,152,152,255,152,152,
152,255,152,152,152,255,162,162,162,255,55,55,55,255,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,255,1,1,1,
255,1,1,1,255,1,1,1,255,1,1,1,255,1,1,1,255,1,1,1,255,1,1,1,255,1,1,1,255,1,1,1,
255,1,1,1,255,1,1,1,255,1,1,1,255,1,1,1,255,1,1,1,255,1,1,1,255,1,1,1,255,1,1,1,
255,1,1,1,255,1,1,1,255,1,1,1,255,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0};
static Fl_RGB_Image image_newlayer(idata_newlayer, 32, 32, 4, 0);

static unsigned char idata_trashlayer[] =
{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,255,1,1,1,
255,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,255,1,1,1,255,1,1,
1,255,1,1,1,255,1,1,1,255,20,20,20,255,1,1,1,255,1,1,1,255,1,1,1,255,1,1,1,
255,1,1,1,255,1,1,1,255,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,1,1,1,255,20,20,20,255,51,51,51,255,100,100,100,255,84,84,84,255,20,
20,20,255,132,132,132,255,151,152,152,255,122,122,122,255,75,75,75,255,51,51,
51,255,1,1,1,255,69,69,69,255,84,84,84,255,37,37,37,255,1,1,1,255,1,1,1,255,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,255,75,75,75,255,138,138,138,255,161,
161,161,255,165,165,165,255,138,138,138,255,115,115,115,255,157,157,157,255,154,
154,154,255,157,157,157,255,165,165,165,255,165,165,165,255,51,51,51,255,90,90,
90,255,169,169,169,255,154,154,154,255,115,115,115,255,37,37,37,255,1,1,1,255,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,20,20,20,255,115,115,115,255,180,180,180,255,154,154,154,
255,151,152,152,255,151,152,152,255,157,157,157,255,157,157,157,255,154,154,154,
255,154,154,154,255,154,154,154,255,154,154,154,255,165,165,165,255,60,60,60,
255,51,51,51,255,161,161,161,255,154,154,154,255,157,157,157,255,165,165,165,
255,100,100,100,255,20,20,20,255,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,51,51,51,255,90,90,90,255,169,169,
169,255,203,203,203,255,165,165,165,255,151,152,152,255,154,154,154,255,154,154,
154,255,154,154,154,255,154,154,154,255,154,154,154,255,154,154,154,255,157,157,
157,255,138,138,138,255,138,138,138,255,154,154,154,255,165,165,165,255,189,189,
189,255,132,132,132,255,100,100,100,255,51,51,51,255,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,20,20,20,255,
109,109,109,255,60,60,60,255,173,173,173,255,233,233,233,255,189,189,189,255,
161,161,161,255,154,154,154,255,151,152,152,255,151,152,152,255,147,147,146,255,
151,152,152,255,147,147,146,255,138,138,138,255,147,147,146,255,169,169,169,255,
169,169,169,255,109,109,109,255,60,60,60,255,132,132,132,255,69,69,69,255,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,1,1,1,255,37,37,37,255,109,109,109,255,75,75,75,255,90,90,90,255,180,180,
180,255,203,203,203,255,189,189,189,255,173,173,173,255,165,165,165,255,165,165,
165,255,161,161,161,255,147,147,146,255,147,147,146,255,132,132,132,255,84,84,
84,255,51,51,51,255,75,75,75,255,100,100,100,255,69,69,69,255,51,51,51,255,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,1,1,1,255,20,20,20,255,84,84,84,255,100,100,100,255,69,69,69,
255,60,60,60,255,75,75,75,255,84,84,84,255,84,84,84,255,84,84,84,255,60,60,60,
255,51,51,51,255,51,51,51,255,51,51,51,255,90,90,90,255,122,122,122,255,69,69,
69,255,1,1,1,255,1,1,1,255,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,20,20,20,255,122,122,122,
255,37,37,37,255,37,37,37,255,90,90,90,255,109,109,109,255,90,90,90,255,69,69,
69,255,60,60,60,255,60,60,60,255,69,69,69,255,100,100,100,255,122,122,122,255,
122,122,122,255,69,69,69,255,20,20,20,255,37,37,37,255,90,90,90,255,1,1,1,255,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,20,20,20,255,147,147,146,255,157,157,157,255,109,109,
109,255,51,51,51,255,37,37,37,255,51,51,51,255,69,69,69,255,84,84,84,255,84,84,
84,255,75,75,75,255,51,51,51,255,37,37,37,255,20,20,20,255,51,51,51,255,109,
109,109,255,161,161,161,255,115,115,115,255,1,1,1,255,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
1,1,1,255,122,122,122,255,161,161,161,255,169,169,169,255,165,165,165,255,138,
138,138,255,100,100,100,255,69,69,69,255,60,60,60,255,60,60,60,255,60,60,60,255,
84,84,84,255,109,109,109,255,151,152,152,255,165,165,165,255,161,161,161,255,
165,165,165,255,75,75,75,255,1,1,1,255,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,255,115,
115,115,255,189,189,189,255,225,225,225,255,115,115,115,255,147,147,146,255,161,
161,161,255,165,165,165,255,180,180,180,255,165,165,165,255,165,165,165,255,157,
157,157,255,180,180,180,255,233,233,233,255,122,122,122,255,138,138,138,255,165,
165,165,255,60,60,60,255,1,1,1,255,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,255,109,109,
109,255,197,197,197,255,233,233,233,255,75,75,75,255,115,115,115,255,154,154,
154,255,197,197,197,255,221,221,221,255,100,100,100,255,138,138,138,255,151,152,
152,255,180,180,180,255,240,240,240,255,84,84,84,255,100,100,100,255,165,165,
165,255,51,51,51,255,1,1,1,255,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,255,109,109,109,
255,197,197,197,255,233,233,233,255,75,75,75,255,115,115,115,255,151,152,152,
255,203,203,203,255,225,225,225,255,69,69,69,255,122,122,122,255,154,154,154,
255,180,180,180,255,240,240,240,255,90,90,90,255,100,100,100,255,169,169,169,
255,51,51,51,255,1,1,1,255,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,255,109,109,109,255,
197,197,197,255,233,233,233,255,75,75,75,255,109,109,109,255,151,152,152,255,
203,203,203,255,225,225,225,255,69,69,69,255,122,122,122,255,154,154,154,255,
180,180,180,255,240,240,240,255,90,90,90,255,100,100,100,255,169,169,169,255,51,
51,51,255,1,1,1,255,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,255,109,109,109,255,197,
197,197,255,233,233,233,255,75,75,75,255,109,109,109,255,154,154,154,255,203,
203,203,255,225,225,225,255,69,69,69,255,122,122,122,255,154,154,154,255,180,
180,180,255,240,240,240,255,90,90,90,255,100,100,100,255,169,169,169,255,51,51,
51,255,1,1,1,255,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,255,90,90,90,255,197,197,197,
255,233,233,233,255,75,75,75,255,109,109,109,255,154,154,154,255,203,203,203,
255,225,225,225,255,69,69,69,255,122,122,122,255,154,154,154,255,180,180,180,
255,240,240,240,255,84,84,84,255,100,100,100,255,165,165,165,255,51,51,51,255,1,
1,1,255,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,255,69,69,69,255,197,197,197,255,233,
233,233,255,69,69,69,255,100,100,100,255,154,154,154,255,203,203,203,255,225,
225,225,255,60,60,60,255,115,115,115,255,154,154,154,255,180,180,180,255,240,
240,240,255,84,84,84,255,90,90,90,255,165,165,165,255,51,51,51,255,1,1,1,255,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,255,69,69,69,255,197,197,197,255,233,233,233,
255,69,69,69,255,100,100,100,255,154,154,154,255,197,197,197,255,225,225,225,
255,60,60,60,255,115,115,115,255,154,154,154,255,180,180,180,255,240,240,240,
255,84,84,84,255,90,90,90,255,165,165,165,255,51,51,51,255,1,1,1,255,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,1,1,1,255,69,69,69,255,197,197,197,255,233,233,233,255,69,69,
69,255,100,100,100,255,154,154,154,255,197,197,197,255,225,225,225,255,60,60,
60,255,115,115,115,255,154,154,154,255,173,173,173,255,240,240,240,255,84,84,
84,255,90,90,90,255,161,161,161,255,37,37,37,255,1,1,1,255,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,1,1,1,255,69,69,69,255,189,189,189,255,233,233,233,255,69,69,69,255,100,
100,100,255,154,154,154,255,189,189,189,255,225,225,225,255,60,60,60,255,115,
115,115,255,157,157,157,255,173,173,173,255,233,233,233,255,84,84,84,255,90,90,
90,255,157,157,157,255,20,20,20,255,1,1,1,255,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,
255,69,69,69,255,189,189,189,255,225,225,225,255,69,69,69,255,100,100,100,255,
154,154,154,255,189,189,189,255,221,221,221,255,60,60,60,255,115,115,115,255,
157,157,157,255,169,169,169,255,233,233,233,255,84,84,84,255,90,90,90,255,154,
154,154,255,20,20,20,255,1,1,1,255,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,255,60,60,
60,255,180,180,180,255,225,225,225,255,69,69,69,255,100,100,100,255,157,157,
157,255,189,189,189,255,221,221,221,255,60,60,60,255,115,115,115,255,157,157,
157,255,165,165,165,255,233,233,233,255,84,84,84,255,90,90,90,255,154,154,154,
255,20,20,20,255,1,1,1,255,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,255,37,37,37,255,
173,173,173,255,221,221,221,255,69,69,69,255,100,100,100,255,157,157,157,255,
180,180,180,255,221,221,221,255,60,60,60,255,115,115,115,255,157,157,157,255,
161,161,161,255,221,221,221,255,84,84,84,255,90,90,90,255,154,154,154,255,20,20,
20,255,1,1,1,255,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,20,20,20,255,157,157,157,
255,165,165,165,255,115,115,115,255,138,138,138,255,151,152,152,255,169,169,169,
255,203,203,203,255,60,60,60,255,115,115,115,255,157,157,157,255,154,154,154,
255,161,161,161,255,122,122,122,255,147,147,146,255,138,138,138,255,1,1,1,255,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,255,75,75,75,255,157,157,157,
255,165,165,165,255,157,157,157,255,154,154,154,255,154,154,154,255,154,154,154,
255,122,122,122,255,147,147,146,255,154,154,154,255,154,154,154,255,154,154,154,
255,169,169,169,255,132,132,132,255,37,37,37,255,1,1,1,255,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,255,51,51,51,255,115,115,115,255,151,152,
152,255,161,161,161,255,161,161,161,255,161,161,161,255,165,165,165,255,165,165,
165,255,161,161,161,255,157,157,157,255,138,138,138,255,84,84,84,255,20,20,20,
255,1,1,1,255,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
1,1,1,255,1,1,1,255,20,20,20,255,51,51,51,255,75,75,75,255,84,84,84,255,84,84,
84,255,84,84,84,255,69,69,69,255,37,37,37,255,1,1,1,255,1,1,1,255,1,1,1,255,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,1,1,1,255,1,1,1,255,1,1,1,255,1,1,1,255,1,1,1,255,1,1,1,255,1,1,1,
255,1,1,1,255,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0};
static Fl_RGB_Image image_trashlayer(idata_trashlayer, 32, 32, 4, 0);

static unsigned char idata_hidelayer[] =
{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,255,0,0,0,255,0,0,0,255,0,0,
0,255,0,0,0,255,0,0,0,255,0,0,0,255,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,255,0,0,0,255,0,0,0,255,0,0,0,255,0,0,0,
255,0,0,0,255,0,0,0,255,0,0,0,255,0,0,0,255,0,0,0,255,0,0,0,255,0,0,0,255,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,255,0,0,0,255,0,0,0,255,0,0,0,255,0,0,0,255,0,0,0,
255,0,0,0,255,0,0,0,255,0,0,0,255,0,0,0,255,0,0,0,255,0,0,0,255,0,0,0,255,0,0,0,
255,0,0,0,255,0,0,0,255,0,0,0,255,0,0,0,255,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,255,0,0,0,255,0,0,0,255,0,0,0,255,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,255,0,0,0,255,0,0,0,255,0,0,0,255,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,255,0,0,0,255,0,0,0,255,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,255,0,0,0,255,0,0,0,255,0,0,0,255,0,0,0,255,0,0,0,255,
0,0,0,255,0,0,0,255,0,0,0,255,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,255,0,0,0,
255,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,255,0,0,0,255,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,255,0,0,0,255,0,0,0,255,0,0,0,255,1,1,1,255,75,75,75,255,136,
136,136,255,76,76,76,255,1,1,1,255,0,0,0,255,0,0,0,255,0,0,0,255,0,0,0,255,0,0,
0,255,0,0,0,255,0,0,0,0,0,0,0,0,0,0,0,255,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,255,0,0,0,255,0,0,0,0,0,0,0,0,0,0,0,255,0,0,0,255,0,0,0,255,
0,0,0,255,100,100,100,255,255,255,255,255,255,255,255,255,255,255,255,255,102,
102,102,255,0,0,0,255,0,0,0,255,0,0,0,255,0,0,0,255,0,0,0,255,0,0,0,255,0,0,0,
255,0,0,0,255,0,0,0,255,0,0,0,255,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,255,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,255,0,0,0,255,0,0,0,255,0,0,0,255,31,31,31,
255,188,188,188,255,243,243,243,255,189,189,189,255,32,32,32,255,0,0,0,255,0,0,
0,255,0,0,0,255,0,0,0,255,0,0,0,255,0,0,0,255,0,0,0,0,0,0,0,0,0,0,0,255,0,0,0,
255,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,255,0,0,0,255,0,0,0,255,0,0,0,255,17,17,17,255,51,51,51,255,18,18,
18,255,0,0,0,255,0,0,0,255,0,0,0,255,0,0,0,255,0,0,0,255,0,0,0,255,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,255,0,0,0,255,0,0,0,255,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,255,0,0,0,255,0,0,0,255,0,0,0,255,0,
0,0,255,0,0,0,255,0,0,0,255,0,0,0,255,0,0,0,255,0,0,0,255,0,0,0,255,0,0,0,255,
0,0,0,255,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,255,0,0,0,255,0,0,0,255,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,255,0,
0,0,255,0,0,0,255,0,0,0,255,0,0,0,255,0,0,0,255,0,0,0,255,0,0,0,255,0,0,0,255,
0,0,0,255,0,0,0,255,0,0,0,255,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,255,0,0,0,255,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,255,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,255,0,0,0,255,0,0,0,255,0,0,0,255,0,0,0,255,0,0,0,255,0,0,0,255,
0,0,0,255,0,0,0,255,0,0,0,255,0,0,0,255,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,255,0,0,
0,255,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,255,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,255,0,0,0,255,0,0,0,255,0,0,0,255,0,0,
0,255,0,0,0,255,0,0,0,255,0,0,0,255,0,0,0,255,0,0,0,0,0,0,0,0,0,0,0,255,0,0,0,
255,0,0,0,255,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,255,0,0,0,255,0,0,0,255,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,255,0,0,0,255,0,0,0,255,0,0,0,255,0,0,0,
255,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,255,0,0,0,255,0,0,0,255,0,0,0,255,0,
0,0,255,0,0,0,255,0,0,0,255,0,0,0,255,0,0,0,255,0,0,0,255,0,0,0,255,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
255,0,0,0,255,0,0,0,255,0,0,0,255,0,0,0,255,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0};
static Fl_RGB_Image image_hidelayer(idata_hidelayer, 28, 28, 4, 0);

Fl_Menu_Item UserInterface::menu_Particles_Alignment[] = {
 {"Billboard", 0,  0, 0, 0, FL_NORMAL_LABEL, 0, 14, 0},
 {"Fixed", 0,  0, 0, 0, FL_NORMAL_LABEL, 0, 14, 0},
 {0,0,0,0,0,0,0,0,0}
};

Fl_Menu_Item UserInterface::menu_Particles_Shape[] = {
 {"Point", 0,  0, 0, 0, FL_NORMAL_LABEL, 0, 14, 0},
 {"Quad", 0,  0, 0, 0, FL_NORMAL_LABEL, 0, 14, 0},
 {"Quad Tri Strip", 0,  0, 0, 0, FL_NORMAL_LABEL, 0, 14, 0},
 {"Hexagon", 0,  0, 0, 0, FL_NORMAL_LABEL, 0, 14, 0},
 {"Line", 0,  0, 0, 0, FL_NORMAL_LABEL, 0, 14, 0},
 {0,0,0,0,0,0,0,0,0}
};

Fl_Menu_Item UserInterface::menu_Counter[] = {
 {"Random Rate Counter", 0,  0, 0, 0, FL_NORMAL_LABEL, 0, 14, 0},
 {0,0,0,0,0,0,0,0,0}
};

Fl_Menu_Item UserInterface::menu_Placer_Type[] = {
 {"Point Placer", 0,  0, 0, 0, FL_NORMAL_LABEL, 0, 14, 0},
 {"Sector Placer", 0,  0, 0, 0, FL_NORMAL_LABEL, 0, 14, 0},
 {"Segment Placer", 0,  0, 0, 0, FL_NORMAL_LABEL, 0, 14, 0},
 {"Multi Segment Placer", 0,  0, 0, 0, FL_NORMAL_LABEL, 0, 14, 0},
 {0,0,0,0,0,0,0,0,0}
};

Fl_Menu_Item UserInterface::menu_Shooter[] = {
 {"Radial Shooter", 0,  0, 0, 0, FL_NORMAL_LABEL, 0, 14, 0},
 {0,0,0,0,0,0,0,0,0}
};

UserInterface::UserInterface( int argc, char** argv) {
  { UIMainWindow = new Fl_Double_Window(1408, 594, "Particle System Editor");
    UIMainWindow->user_data((void*)(this));
    { MainMenu = new Fl_Menu_Bar(5, 5, 1400, 25);
      MainMenu->menu(menu_MainMenu);
    } // Fl_Menu_Bar* MainMenu
    { Fl_Tile* o = new Fl_Tile(0, 35, 1405, 560);
      o->box(FL_UP_FRAME);
      { Fl_Group* o = new Fl_Group(719, 35, 185, 290);
        o->box(FL_DOWN_BOX);
        { Fl_Box* o = new Fl_Box(845, 75, 53, 180, "resizebox");
          o->hide();
          Fl_Group::current()->resizable(o);
        } // Fl_Box* o
        { Fl_Button* o = new Fl_Button(729, 255, 34, 34);
          o->tooltip("Add new Layer");
          o->image(image_newlayer);
          o->callback((Fl_Callback*)psEditorGUI_NewLayer);
        } // Fl_Button* o
        { Layers_DeleteButton = new Fl_Button(764, 255, 34, 34);
          Layers_DeleteButton->tooltip("Delete selected Layer");
          Layers_DeleteButton->image(image_trashlayer);
          Layers_DeleteButton->callback((Fl_Callback*)psEditorGUI_DeleteLayer);
        } // Fl_Button* Layers_DeleteButton
        { Layers_RenameButton = new Fl_Button(729, 290, 65, 30, "Rename");
          Layers_RenameButton->tooltip("Rename selected Layer");
          Layers_RenameButton->callback((Fl_Callback*)psEditorGUI_RenameLayer);
        } // Fl_Button* Layers_RenameButton
        { Layers = new Fl_Browser(724, 85, 181, 165, "Layers");
          Layers->type(2);
          Layers->callback((Fl_Callback*)psEditorGUI_LayerSelect);
          Layers->align(FL_ALIGN_TOP);
        } // Fl_Browser* Layers
        { Layers_HideButton = new Fl_Light_Button(800, 255, 47, 34);
          Layers_HideButton->tooltip("Toggle the visibility of the selected Layer");
          Layers_HideButton->value(1);
          Layers_HideButton->image(image_hidelayer);
          Layers_HideButton->callback((Fl_Callback*)psEditorGUI_HideLayer);
        } // Fl_Light_Button* Layers_HideButton
        o->end();
      } // Fl_Group* o
      { viewWidget = new ViewWindow(5, 35, 700, 550);
        viewWidget->box(FL_DOWN_BOX);
        viewWidget->color(FL_BACKGROUND_COLOR);
        viewWidget->selection_color(FL_BACKGROUND_COLOR);
        viewWidget->labeltype(FL_NORMAL_LABEL);
        viewWidget->labelfont(0);
        viewWidget->labelsize(14);
        viewWidget->labelcolor(FL_FOREGROUND_COLOR);
        viewWidget->align(FL_ALIGN_CENTER);
        viewWidget->when(FL_WHEN_RELEASE);
      } // ViewWindow* viewWidget
      { ParameterTabs = new Fl_Tabs(904, 39, 495, 549);
        { Fl_Group* o = new Fl_Group(904, 60, 490, 515, "Particles");
          { Particles_Alignment = new Fl_Choice(979, 70, 95, 25, "Alignment");
            Particles_Alignment->down_box(FL_BORDER_BOX);
            Particles_Alignment->callback((Fl_Callback*)psEditorGUI_Particles_SetAlignment);
            Particles_Alignment->menu(menu_Particles_Alignment);
          } // Fl_Choice* Particles_Alignment
          { Particles_Shape = new Fl_Choice(979, 105, 130, 25, "Shape");
            Particles_Shape->down_box(FL_BORDER_BOX);
            Particles_Shape->callback((Fl_Callback*)psEditorGUI_Particles_SetShape);
            Particles_Shape->menu(menu_Particles_Shape);
          } // Fl_Choice* Particles_Shape
          { Particles_Lifetime = new Fl_Value_Input(979, 140, 60, 25, "Life(sec)");
            Particles_Lifetime->tooltip("The lifetime of each particle (seconds)");
            Particles_Lifetime->maximum(1000);
            Particles_Lifetime->step(0.01);
            Particles_Lifetime->value(2);
            Particles_Lifetime->callback((Fl_Callback*)psEditorGUI_Particles_SetLifetime);
          } // Fl_Value_Input* Particles_Lifetime
          { Particles_MinSize = new Fl_Value_Input(979, 225, 60, 25, "Size (m)");
            Particles_MinSize->tooltip("Size at start of lifetime");
            Particles_MinSize->maximum(1000);
            Particles_MinSize->step(0.01);
            Particles_MinSize->value(0.2);
            Particles_MinSize->callback((Fl_Callback*)psEditorGUI_Particles_SetMinSize);
          } // Fl_Value_Input* Particles_MinSize
          { Particles_MaxSize = new Fl_Value_Input(1059, 225, 60, 25, "to");
            Particles_MaxSize->tooltip("Size at end of lifetime");
            Particles_MaxSize->maximum(1000);
            Particles_MaxSize->step(0.01);
            Particles_MaxSize->value(0.2);
            Particles_MaxSize->callback((Fl_Callback*)psEditorGUI_Particles_SetMaxSize);
          } // Fl_Value_Input* Particles_MaxSize
          { Particles_Radius = new Fl_Value_Input(979, 168, 60, 25, "Radius");
            Particles_Radius->maximum(10);
            Particles_Radius->step(0.01);
            Particles_Radius->value(0.2);
            Particles_Radius->callback((Fl_Callback*)psEditorGUI_Particles_SetRadius);
          } // Fl_Value_Input* Particles_Radius
          { Particles_Mass = new Fl_Value_Input(979, 196, 60, 25, "Mass");
            Particles_Mass->maximum(10);
            Particles_Mass->step(0.01);
            Particles_Mass->value(0.1);
            Particles_Mass->callback((Fl_Callback*)psEditorGUI_Particles_SetMass);
          } // Fl_Value_Input* Particles_Mass
          { Particles_Texture = new Fl_Input(979, 269, 291, 25, "Texture");
            Particles_Texture->callback((Fl_Callback*)psEditorGUI_Particles_SetTexture);
          } // Fl_Input* Particles_Texture
          { Fl_Button* o = new Fl_Button(1274, 269, 30, 25, "...");
            o->callback((Fl_Callback*)psEditorGUI_Particles_ChooseTexture);
          } // Fl_Button* o
          { Particles_Emissive = new Fl_Check_Button(1074, 147, 95, 25, "Emissive");
            Particles_Emissive->down_box(FL_DOWN_BOX);
            Particles_Emissive->callback((Fl_Callback*)psEditorGUI_Particles_SetEmissive);
          } // Fl_Check_Button* Particles_Emissive
          { Particles_Lighting = new Fl_Check_Button(1074, 172, 20, 25, "Lighting");
            Particles_Lighting->down_box(FL_DOWN_BOX);
            Particles_Lighting->callback((Fl_Callback*)psEditorGUI_Particles_SetLighting);
          } // Fl_Check_Button* Particles_Lighting
          { Fl_Group* o = new Fl_Group(979, 316, 140, 125);
            o->box(FL_ENGRAVED_BOX);
            { Particles_MinR = new Fl_Value_Input(999, 322, 80, 25, "R");
              Particles_MinR->tooltip("Start color Red");
              Particles_MinR->step(0.01);
              Particles_MinR->value(1);
              Particles_MinR->callback((Fl_Callback*)psEditorGUI_Particles_SetMinR);
            } // Fl_Value_Input* Particles_MinR
            { Particles_MinG = new Fl_Value_Input(999, 352, 80, 25, "G");
              Particles_MinG->tooltip("Start color green");
              Particles_MinG->step(0.01);
              Particles_MinG->value(1);
              Particles_MinG->callback((Fl_Callback*)psEditorGUI_Particles_SetMinG);
            } // Fl_Value_Input* Particles_MinG
            { Particles_MinB = new Fl_Value_Input(999, 382, 80, 25, "B");
              Particles_MinB->tooltip("Start color blue");
              Particles_MinB->step(0.01);
              Particles_MinB->value(1);
              Particles_MinB->callback((Fl_Callback*)psEditorGUI_Particles_SetMinB);
            } // Fl_Value_Input* Particles_MinB
            { Particles_MinColor = new Fl_Button(1084, 322, 25, 85, "...");
              Particles_MinColor->callback((Fl_Callback*)psEditorGUI_Particles_ChooseMinColor);
            } // Fl_Button* Particles_MinColor
            { Particles_MinAlpha = new Fl_Value_Input(998, 411, 80, 25, "A");
              Particles_MinAlpha->tooltip("Alpha value at start of lifetime");
              Particles_MinAlpha->step(0.01);
              Particles_MinAlpha->value(1);
              Particles_MinAlpha->callback((Fl_Callback*)psEditorGUI_Particles_SetMinAlpha);
            } // Fl_Value_Input* Particles_MinAlpha
            o->end();
          } // Fl_Group* o
          { new Fl_Box(934, 367, 45, 25, "Color");
          } // Fl_Box* o
          { Fl_Group* o = new Fl_Group(1144, 316, 140, 125);
            o->box(FL_ENGRAVED_BOX);
            { Particles_MaxR = new Fl_Value_Input(1164, 322, 80, 25, "R");
              Particles_MaxR->tooltip("End color red");
              Particles_MaxR->step(0.01);
              Particles_MaxR->value(1);
              Particles_MaxR->callback((Fl_Callback*)psEditorGUI_Particles_SetMaxR);
            } // Fl_Value_Input* Particles_MaxR
            { Particles_MaxG = new Fl_Value_Input(1164, 352, 80, 25, "G");
              Particles_MaxG->tooltip("End color green");
              Particles_MaxG->step(0.01);
              Particles_MaxG->value(1);
              Particles_MaxG->callback((Fl_Callback*)psEditorGUI_Particles_SetMaxG);
            } // Fl_Value_Input* Particles_MaxG
            { Particles_MaxB = new Fl_Value_Input(1164, 382, 80, 25, "B");
              Particles_MaxB->tooltip("End color blue");
              Particles_MaxB->step(0.01);
              Particles_MaxB->value(1);
              Particles_MaxB->callback((Fl_Callback*)psEditorGUI_Particles_SetMaxB);
            } // Fl_Value_Input* Particles_MaxB
            { Particles_MaxColor = new Fl_Button(1249, 322, 25, 85, "...");
              Particles_MaxColor->callback((Fl_Callback*)psEditorGUI_Particles_ChooseMaxColor);
            } // Fl_Button* Particles_MaxColor
            { Particles_MaxAlpha = new Fl_Value_Input(1165, 411, 80, 25, "A");
              Particles_MaxAlpha->tooltip("Alpha value at end of lifetime");
              Particles_MaxAlpha->step(0.01);
              Particles_MaxAlpha->callback((Fl_Callback*)psEditorGUI_Particles_SetMaxAlpha);
            } // Fl_Value_Input* Particles_MaxAlpha
            o->end();
          } // Fl_Group* o
          { new Fl_Box(1119, 363, 25, 25, "to");
          } // Fl_Box* o
          { Fl_Group* o = new Fl_Group(979, 453, 305, 110, "Emitter");
            o->box(FL_ENGRAVED_BOX);
            o->align(FL_ALIGN_LEFT);
            { Particles_Emitter_Endless = new Fl_Check_Button(1196, 500, 80, 25, "Forever");
              Particles_Emitter_Endless->tooltip("Does the emitter endlessly emit particles?");
              Particles_Emitter_Endless->down_box(FL_DOWN_BOX);
              Particles_Emitter_Endless->value(1);
              Particles_Emitter_Endless->callback((Fl_Callback*)psEditorGUI_Particles_SetEmitterEndless);
            } // Fl_Check_Button* Particles_Emitter_Endless
            { Particles_Emitter_Lifetime = new Fl_Value_Input(1096, 465, 80, 25, "Life(sec)");
              Particles_Emitter_Lifetime->tooltip("The emitter\'s lifetime (in seconds)");
              Particles_Emitter_Lifetime->maximum(10);
              Particles_Emitter_Lifetime->step(0.01);
              Particles_Emitter_Lifetime->value(5);
              Particles_Emitter_Lifetime->callback((Fl_Callback*)psEditorGUI_Particles_SetEmitterLifetime);
            } // Fl_Value_Input* Particles_Emitter_Lifetime
            { Particles_Emitter_StartTime = new Fl_Value_Input(1096, 495, 80, 25, "Start Time (sec)");
              Particles_Emitter_StartTime->tooltip("The amount of delay before emitting");
              Particles_Emitter_StartTime->maximum(10);
              Particles_Emitter_StartTime->step(0.01);
              Particles_Emitter_StartTime->callback((Fl_Callback*)psEditorGUI_Particles_SetEmitterStartTime);
            } // Fl_Value_Input* Particles_Emitter_StartTime
            { Particles_Emitter_ResetTime = new Fl_Value_Input(1096, 526, 80, 25, "Reset Time (sec)");
              Particles_Emitter_ResetTime->tooltip("How long before the emitter resets (seconds)");
              Particles_Emitter_ResetTime->maximum(10);
              Particles_Emitter_ResetTime->step(0.01);
              Particles_Emitter_ResetTime->callback((Fl_Callback*)psEditorGUI_Particles_SetEmitterResetTime);
            } // Fl_Value_Input* Particles_Emitter_ResetTime
            o->end();
          } // Fl_Group* o
          { Particles_TexturePreview = new TexturePreview(1177, 105, 128, 128, "Texture Preview");
            Particles_TexturePreview->box(FL_DOWN_BOX);
            Particles_TexturePreview->color(FL_BACKGROUND_COLOR);
            Particles_TexturePreview->selection_color(FL_BACKGROUND_COLOR);
            Particles_TexturePreview->labeltype(FL_NORMAL_LABEL);
            Particles_TexturePreview->labelfont(0);
            Particles_TexturePreview->labelsize(14);
            Particles_TexturePreview->labelcolor(FL_FOREGROUND_COLOR);
            Particles_TexturePreview->align(FL_ALIGN_TOP);
            Particles_TexturePreview->when(FL_WHEN_RELEASE);
          } // TexturePreview* Particles_TexturePreview
          o->end();
        } // Fl_Group* o
        { Fl_Group* o = new Fl_Group(904, 60, 490, 515, "Counter");
          o->hide();
          { RandomRateCounterParameters = new Fl_Group(974, 308, 290, 157, "Random Rate Counter Parameters");
            RandomRateCounterParameters->box(FL_DOWN_BOX);
            RandomRateCounterParameters->align(FL_ALIGN_BOTTOM|FL_ALIGN_INSIDE);
            RandomRateCounterParameters->hide();
            { RandomRateCounter_MinRate = new Fl_Value_Input(1144, 350, 80, 25, "Min. Rate (particles/sec)");
              RandomRateCounter_MinRate->tooltip("The minimum number of particles/sec output from the Emitter");
              RandomRateCounter_MinRate->maximum(1000);
              RandomRateCounter_MinRate->step(0.1);
              RandomRateCounter_MinRate->value(20);
              RandomRateCounter_MinRate->callback((Fl_Callback*)psEditorGUI_RandomRateCounter_SetMinRate);
            } // Fl_Value_Input* RandomRateCounter_MinRate
            { RandomRateCounter_MaxRate = new Fl_Value_Input(1144, 385, 80, 25, "Max. Rate (particles/sec)");
              RandomRateCounter_MaxRate->tooltip("The maximum number of particles/sec output from the Emitter");
              RandomRateCounter_MaxRate->maximum(1000);
              RandomRateCounter_MaxRate->step(0.1);
              RandomRateCounter_MaxRate->value(30);
              RandomRateCounter_MaxRate->callback((Fl_Callback*)psEditorGUI_RandomRateCounter_SetMaxRate);
            } // Fl_Value_Input* RandomRateCounter_MaxRate
            RandomRateCounterParameters->end();
          } // Fl_Group* RandomRateCounterParameters
          { Fl_Choice* o = new Fl_Choice(1064, 123, 180, 25, "Counter Type");
            o->down_box(FL_BORDER_BOX);
            o->callback((Fl_Callback*)psEditorGUI_Counter_SetType);
            o->menu(menu_Counter);
          } // Fl_Choice* o
          o->end();
        } // Fl_Group* o
        { Fl_Group* o = new Fl_Group(904, 60, 490, 515, "Placer");
          o->hide();
          { SegmentPlacerParameters = new Fl_Group(924, 305, 350, 160, "Segment Placer Parameters");
            SegmentPlacerParameters->box(FL_DOWN_BOX);
            SegmentPlacerParameters->align(FL_ALIGN_BOTTOM|FL_ALIGN_INSIDE);
            SegmentPlacerParameters->hide();
            { Fl_Group* o = new Fl_Group(944, 335, 145, 103, "Vertex A");
              o->box(FL_ENGRAVED_BOX);
              { SegmentPlacer_A_X = new Fl_Value_Input(989, 345, 80, 25, "X");
                SegmentPlacer_A_X->minimum(-10);
                SegmentPlacer_A_X->maximum(10);
                SegmentPlacer_A_X->step(0.1);
                SegmentPlacer_A_X->value(-1);
                SegmentPlacer_A_X->callback((Fl_Callback*)psEditor_SegmentPlacer_VertexA_SetX);
              } // Fl_Value_Input* SegmentPlacer_A_X
              { SegmentPlacer_A_Y = new Fl_Value_Input(989, 375, 80, 25, "Y");
                SegmentPlacer_A_Y->minimum(-10);
                SegmentPlacer_A_Y->maximum(10);
                SegmentPlacer_A_Y->step(0.1);
                SegmentPlacer_A_Y->callback((Fl_Callback*)psEditor_SegmentPlacer_VertexA_SetY);
              } // Fl_Value_Input* SegmentPlacer_A_Y
              { SegmentPlacer_A_Z = new Fl_Value_Input(989, 405, 80, 25, "Z");
                SegmentPlacer_A_Z->minimum(-10);
                SegmentPlacer_A_Z->maximum(10);
                SegmentPlacer_A_Z->step(0.1);
                SegmentPlacer_A_Z->callback((Fl_Callback*)psEditor_SegmentPlacer_VertexA_SetZ);
              } // Fl_Value_Input* SegmentPlacer_A_Z
              o->end();
            } // Fl_Group* o
            { Fl_Group* o = new Fl_Group(1114, 333, 120, 105, "Vertex B");
              o->box(FL_ENGRAVED_BOX);
              { SegmentPlacer_B_X = new Fl_Value_Input(1134, 345, 80, 25, "X");
                SegmentPlacer_B_X->minimum(-10);
                SegmentPlacer_B_X->maximum(10);
                SegmentPlacer_B_X->step(0.1);
                SegmentPlacer_B_X->value(1);
                SegmentPlacer_B_X->callback((Fl_Callback*)psEditor_SegmentPlacer_VertexB_SetX);
              } // Fl_Value_Input* SegmentPlacer_B_X
              { SegmentPlacer_B_Y = new Fl_Value_Input(1134, 375, 80, 25, "Y");
                SegmentPlacer_B_Y->minimum(-10);
                SegmentPlacer_B_Y->maximum(10);
                SegmentPlacer_B_Y->step(0.1);
                SegmentPlacer_B_Y->callback((Fl_Callback*)psEditor_SegmentPlacer_VertexB_SetY);
              } // Fl_Value_Input* SegmentPlacer_B_Y
              { SegmentPlacer_B_Z = new Fl_Value_Input(1134, 405, 80, 25, "Z");
                SegmentPlacer_B_Z->minimum(-10);
                SegmentPlacer_B_Z->maximum(10);
                SegmentPlacer_B_Z->step(0.1);
                SegmentPlacer_B_Z->callback((Fl_Callback*)psEditor_SegmentPlacer_VertexB_SetZ);
              } // Fl_Value_Input* SegmentPlacer_B_Z
              o->end();
            } // Fl_Group* o
            SegmentPlacerParameters->end();
          } // Fl_Group* SegmentPlacerParameters
          { SectorPlacerParameters = new Fl_Group(909, 305, 465, 158, "Sector Placer Parameters");
            SectorPlacerParameters->box(FL_DOWN_BOX);
            SectorPlacerParameters->align(FL_ALIGN_BOTTOM|FL_ALIGN_INSIDE);
            SectorPlacerParameters->hide();
            { Fl_Group* o = new Fl_Group(924, 330, 115, 108, "Center");
              o->box(FL_ENGRAVED_BOX);
              { SectorPlacer_X = new Fl_Value_Input(947, 340, 80, 25, "X");
                SectorPlacer_X->minimum(-10);
                SectorPlacer_X->maximum(10);
                SectorPlacer_X->step(0.1);
                SectorPlacer_X->callback((Fl_Callback*)psEditorGUI_SectorPlacer_Center_SetX);
              } // Fl_Value_Input* SectorPlacer_X
              { SectorPlacer_Y = new Fl_Value_Input(947, 372, 80, 25, "Y");
                SectorPlacer_Y->minimum(-10);
                SectorPlacer_Y->maximum(10);
                SectorPlacer_Y->step(0.1);
                SectorPlacer_Y->callback((Fl_Callback*)psEditorGUI_SectorPlacer_Center_SetY);
              } // Fl_Value_Input* SectorPlacer_Y
              { SectorPlacer_Z = new Fl_Value_Input(945, 403, 80, 25, "Z");
                SectorPlacer_Z->minimum(-10);
                SectorPlacer_Z->maximum(10);
                SectorPlacer_Z->step(0.1);
                SectorPlacer_Z->callback((Fl_Callback*)psEditorGUI_SectorPlacer_Center_SetZ);
              } // Fl_Value_Input* SectorPlacer_Z
              o->end();
            } // Fl_Group* o
            { SectorPlacer_MinRadius = new Fl_Value_Input(1124, 355, 80, 25, "Min. Radius");
              SectorPlacer_MinRadius->maximum(10);
              SectorPlacer_MinRadius->step(0.1);
              SectorPlacer_MinRadius->callback((Fl_Callback*)psEditorGUI_SectorPlacer_SetMinRadius);
            } // Fl_Value_Input* SectorPlacer_MinRadius
            { SectorPlacer_MaxRadius = new Fl_Value_Input(1124, 386, 80, 25, "Max. Radius");
              SectorPlacer_MaxRadius->maximum(10);
              SectorPlacer_MaxRadius->step(0.1);
              SectorPlacer_MaxRadius->value(1);
              SectorPlacer_MaxRadius->callback((Fl_Callback*)psEditorGUI_SectorPlacer_SetMaxRadius);
            } // Fl_Value_Input* SectorPlacer_MaxRadius
            { SectorPlacer_MinPhi = new Fl_Value_Input(1274, 355, 80, 25, "Min. Phi");
              SectorPlacer_MinPhi->maximum(6.2832);
              SectorPlacer_MinPhi->step(0.01);
              SectorPlacer_MinPhi->callback((Fl_Callback*)psEditorGUI_SectorPlacer_SetMinPhi);
            } // Fl_Value_Input* SectorPlacer_MinPhi
            { SectorPlacer_MaxPhi = new Fl_Value_Input(1274, 386, 80, 25, "Max. Phi");
              SectorPlacer_MaxPhi->maximum(6.2832);
              SectorPlacer_MaxPhi->step(0.01);
              SectorPlacer_MaxPhi->value(6.2832);
              SectorPlacer_MaxPhi->callback((Fl_Callback*)psEditorGUI_SectorPlacer_SetMaxPhi);
            } // Fl_Value_Input* SectorPlacer_MaxPhi
            SectorPlacerParameters->end();
          } // Fl_Group* SectorPlacerParameters
          { PointPlacerParameters = new Fl_Group(928, 303, 341, 162, "Point Placer Parameters");
            PointPlacerParameters->box(FL_DOWN_BOX);
            PointPlacerParameters->align(FL_ALIGN_BOTTOM|FL_ALIGN_INSIDE);
            PointPlacerParameters->hide();
            { PointPlacer_X = new Fl_Value_Input(1063, 335, 80, 25, "X");
              PointPlacer_X->minimum(-10);
              PointPlacer_X->maximum(10);
              PointPlacer_X->step(0.1);
              PointPlacer_X->callback((Fl_Callback*)psEditorGUI_PointPlacer_SetX);
            } // Fl_Value_Input* PointPlacer_X
            { PointPlacer_Y = new Fl_Value_Input(1063, 365, 80, 25, "Y");
              PointPlacer_Y->minimum(-10);
              PointPlacer_Y->maximum(10);
              PointPlacer_Y->step(0.1);
              PointPlacer_Y->callback((Fl_Callback*)psEditorGUI_PointPlacer_SetY);
            } // Fl_Value_Input* PointPlacer_Y
            { PointPlacer_Z = new Fl_Value_Input(1063, 395, 80, 25, "Z");
              PointPlacer_Z->minimum(-10);
              PointPlacer_Z->maximum(10);
              PointPlacer_Z->step(0.1);
              PointPlacer_Z->callback((Fl_Callback*)psEditorGUI_PointPlacer_SetZ);
            } // Fl_Value_Input* PointPlacer_Z
            PointPlacerParameters->end();
          } // Fl_Group* PointPlacerParameters
          { MultiSegmentPlacerParameters = new Fl_Group(909, 305, 380, 160, "Multi Segment Placer Parameters");
            MultiSegmentPlacerParameters->box(FL_DOWN_BOX);
            MultiSegmentPlacerParameters->align(FL_ALIGN_BOTTOM|FL_ALIGN_INSIDE);
            MultiSegmentPlacerParameters->hide();
            { MultiSegmentPlacer_Vertices = new Fl_Browser(919, 315, 170, 105, "Vertices");
              MultiSegmentPlacer_Vertices->type(2);
              MultiSegmentPlacer_Vertices->callback((Fl_Callback*)psEditorGUI_MultiSegmentPlacer_VerticesChanged);
            } // Fl_Browser* MultiSegmentPlacer_Vertices
            { Fl_Button* o = new Fl_Button(1094, 365, 115, 25, "Add Vertex");
              o->callback((Fl_Callback*)psEditorGUI_MultiSegmentPlacer_AddVertex);
            } // Fl_Button* o
            { MultiSegmentPlacer_DeleteVertex = new Fl_Button(1094, 395, 115, 25, "Delete Vertex");
              MultiSegmentPlacer_DeleteVertex->callback((Fl_Callback*)psEditorGUI_MultiSegmentPlacer_DeleteVertex);
            } // Fl_Button* MultiSegmentPlacer_DeleteVertex
            { MultiSegmentPlacer_VertexParameters = new Fl_Group(1249, 315, 40, 105, "Vertex Parameters");
              MultiSegmentPlacer_VertexParameters->box(FL_ENGRAVED_BOX);
              MultiSegmentPlacer_VertexParameters->align(FL_ALIGN_BOTTOM);
              MultiSegmentPlacer_VertexParameters->hide();
              { MultiSegmentPlacer_X = new Fl_Value_Input(1274, 325, 15, 25, "X");
                MultiSegmentPlacer_X->minimum(-10);
                MultiSegmentPlacer_X->maximum(10);
                MultiSegmentPlacer_X->step(0.1);
                MultiSegmentPlacer_X->callback((Fl_Callback*)psEditorGUI_MultiSegmentPlacer_Vertex_SetX);
              } // Fl_Value_Input* MultiSegmentPlacer_X
              { MultiSegmentPlacer_Y = new Fl_Value_Input(1274, 355, 15, 25, "Y");
                MultiSegmentPlacer_Y->minimum(-10);
                MultiSegmentPlacer_Y->maximum(10);
                MultiSegmentPlacer_Y->step(0.1);
                MultiSegmentPlacer_Y->callback((Fl_Callback*)psEditorGUI_MultiSegmentPlacer_Vertex_SetY);
              } // Fl_Value_Input* MultiSegmentPlacer_Y
              { MultiSegmentPlacer_Z = new Fl_Value_Input(1274, 385, 15, 25, "Z");
                MultiSegmentPlacer_Z->minimum(-10);
                MultiSegmentPlacer_Z->maximum(10);
                MultiSegmentPlacer_Z->step(0.1);
                MultiSegmentPlacer_Z->callback((Fl_Callback*)psEditorGUI_MultiSegmentPlacer_Vertex_SetZ);
              } // Fl_Value_Input* MultiSegmentPlacer_Z
              MultiSegmentPlacer_VertexParameters->end();
            } // Fl_Group* MultiSegmentPlacer_VertexParameters
            MultiSegmentPlacerParameters->end();
          } // Fl_Group* MultiSegmentPlacerParameters
          { Placer_Type = new Fl_Choice(1069, 133, 155, 25, "Placer Type");
            Placer_Type->down_box(FL_BORDER_BOX);
            Placer_Type->callback((Fl_Callback*)psEditorGUI_Placer_SetType);
            Placer_Type->menu(menu_Placer_Type);
          } // Fl_Choice* Placer_Type
          o->end();
        } // Fl_Group* o
        { Fl_Group* o = new Fl_Group(904, 60, 490, 515, "Shooter");
          o->hide();
          { RadialShooterParameters = new Fl_Group(909, 188, 460, 387);
            RadialShooterParameters->box(FL_DOWN_BOX);
            RadialShooterParameters->align(FL_ALIGN_BOTTOM|FL_ALIGN_INSIDE);
            { Fl_Group* o = new Fl_Group(1113, 201, 163, 64, "Elevation Range");
              o->tooltip("The elevation range the Shooter will send each particle. 0=up, 3.14=down");
              o->box(FL_ENGRAVED_FRAME);
              o->align(FL_ALIGN_LEFT);
              { RadialShooter_MinTheta = new Fl_Value_Input(1186, 205, 85, 25, "Min (rad)");
                RadialShooter_MinTheta->tooltip("The minimum elevation (0=up, 3.14=down)");
                RadialShooter_MinTheta->minimum(-3.1416);
                RadialShooter_MinTheta->maximum(3.1416);
                RadialShooter_MinTheta->step(0.01);
                RadialShooter_MinTheta->callback((Fl_Callback*)psEditorGUI_RadialShooter_SetMinTheta);
              } // Fl_Value_Input* RadialShooter_MinTheta
              { RadialShooter_MaxTheta = new Fl_Value_Input(1186, 235, 85, 25, "Max (rad)");
                RadialShooter_MaxTheta->tooltip("The maximum elevation (0=up, 3.14=down)");
                RadialShooter_MaxTheta->minimum(-3.1416);
                RadialShooter_MaxTheta->maximum(3.1416);
                RadialShooter_MaxTheta->step(0.01);
                RadialShooter_MaxTheta->value(0.3927);
                RadialShooter_MaxTheta->callback((Fl_Callback*)psEditorGUI_RadialShooter_SetMaxTheta);
              } // Fl_Value_Input* RadialShooter_MaxTheta
              o->end();
            } // Fl_Group* o
            { Fl_Group* o = new Fl_Group(1114, 275, 163, 64, "Azimuth Range");
              o->tooltip("The azimuth range the Shooter will send each particle. 0 = X axis, 3.14 = -X \
axis");
              o->box(FL_ENGRAVED_FRAME);
              o->align(FL_ALIGN_LEFT);
              { RadialShooter_MinPhi = new Fl_Value_Input(1187, 280, 85, 25, "Min (rad)");
                RadialShooter_MinPhi->tooltip("The minimum azimuth (0=down the X+ axis)");
                RadialShooter_MinPhi->minimum(-6.2832);
                RadialShooter_MinPhi->maximum(6.2832);
                RadialShooter_MinPhi->step(0.01);
                RadialShooter_MinPhi->callback((Fl_Callback*)psEditorGUI_RadialShooter_SetMinPhi);
              } // Fl_Value_Input* RadialShooter_MinPhi
              { RadialShooter_MaxPhi = new Fl_Value_Input(1187, 310, 85, 25, "Max (rad)");
                RadialShooter_MaxPhi->tooltip("The maximum azimuth (0=down the -X axis)");
                RadialShooter_MaxPhi->minimum(-6.2832);
                RadialShooter_MaxPhi->maximum(6.2832);
                RadialShooter_MaxPhi->step(0.01);
                RadialShooter_MaxPhi->value(6.2832);
                RadialShooter_MaxPhi->callback((Fl_Callback*)psEditorGUI_RadialShooter_SetMaxPhi);
              } // Fl_Value_Input* RadialShooter_MaxPhi
              o->end();
            } // Fl_Group* o
            { Fl_Group* o = new Fl_Group(1115, 349, 163, 64, "Initial Velocity Range");
              o->tooltip("The initial velocity range the Shooter will send each particle");
              o->box(FL_ENGRAVED_FRAME);
              o->align(FL_ALIGN_LEFT);
              { RadialShooter_MinInitialSpeed = new Fl_Value_Input(1188, 354, 85, 25, "Min (m/s)");
                RadialShooter_MinInitialSpeed->tooltip("The minimum starting velocity of each particle");
                RadialShooter_MinInitialSpeed->maximum(1000);
                RadialShooter_MinInitialSpeed->step(0.1);
                RadialShooter_MinInitialSpeed->value(10);
                RadialShooter_MinInitialSpeed->callback((Fl_Callback*)psEditorGUI_RadialShooter_SetMinInitialSpeed);
              } // Fl_Value_Input* RadialShooter_MinInitialSpeed
              { RadialShooter_MaxInitialSpeed = new Fl_Value_Input(1188, 384, 85, 25, "Max (m/s)");
                RadialShooter_MaxInitialSpeed->tooltip("The maximum starting velocity of each particle");
                RadialShooter_MaxInitialSpeed->maximum(1000);
                RadialShooter_MaxInitialSpeed->step(0.1);
                RadialShooter_MaxInitialSpeed->value(10);
                RadialShooter_MaxInitialSpeed->callback((Fl_Callback*)psEditorGUI_RadialShooter_SetMaxInitialSpeed);
              } // Fl_Value_Input* RadialShooter_MaxInitialSpeed
              o->end();
            } // Fl_Group* o
            { Fl_Group* o = new Fl_Group(919, 444, 434, 114, "Initial Rotational Velocity Range");
              o->tooltip("The inital rotational velocity range the Shooter applies to each particle");
              o->box(FL_ENGRAVED_BOX);
              { Fl_Group* o = new Fl_Group(1003, 453, 125, 94, "Min(rad/sec)");
                o->box(FL_ENGRAVED_FRAME);
                o->align(FL_ALIGN_LEFT);
                { RadialShooter_MinInitialRotationalSpeedX = new Fl_Value_Input(1051, 458, 70, 25, "X Axis");
                RadialShooter_MinInitialRotationalSpeedX->minimum(-10);
                RadialShooter_MinInitialRotationalSpeedX->maximum(10);
                RadialShooter_MinInitialRotationalSpeedX->step(0.1);
                RadialShooter_MinInitialRotationalSpeedX->callback((Fl_Callback*)psEditorGUI_RadialShooter_SetMinInitialRotationalSpeedX);
                } // Fl_Value_Input* RadialShooter_MinInitialRotationalSpeedX
                { RadialShooter_MinInitialRotationalSpeedY = new Fl_Value_Input(1051, 488, 70, 25, "Y Axis");
                RadialShooter_MinInitialRotationalSpeedY->minimum(-10);
                RadialShooter_MinInitialRotationalSpeedY->maximum(10);
                RadialShooter_MinInitialRotationalSpeedY->step(0.1);
                RadialShooter_MinInitialRotationalSpeedY->callback((Fl_Callback*)psEditorGUI_RadialShooter_SetMinInitialRotationalSpeedY);
                } // Fl_Value_Input* RadialShooter_MinInitialRotationalSpeedY
                { RadialShooter_MinInitialRotationalSpeedZ = new Fl_Value_Input(1051, 518, 70, 24, "Z Axis");
                RadialShooter_MinInitialRotationalSpeedZ->minimum(-10);
                RadialShooter_MinInitialRotationalSpeedZ->maximum(10);
                RadialShooter_MinInitialRotationalSpeedZ->step(0.1);
                RadialShooter_MinInitialRotationalSpeedZ->callback((Fl_Callback*)psEditorGUI_RadialShooter_SetMinInitialRotationalSpeedZ);
                } // Fl_Value_Input* RadialShooter_MinInitialRotationalSpeedZ
                o->end();
              } // Fl_Group* o
              { Fl_Group* o = new Fl_Group(1218, 453, 125, 95, "Max(rad/sec)");
                o->box(FL_ENGRAVED_FRAME);
                o->align(FL_ALIGN_LEFT);
                { RadialShooter_MaxInitialRotationalSpeedX = new Fl_Value_Input(1265, 458, 70, 25, "X Axis");
                RadialShooter_MaxInitialRotationalSpeedX->minimum(-10);
                RadialShooter_MaxInitialRotationalSpeedX->maximum(10);
                RadialShooter_MaxInitialRotationalSpeedX->step(0.1);
                RadialShooter_MaxInitialRotationalSpeedX->callback((Fl_Callback*)psEditorGUI_RadialShooter_SetMaxInitialRotationalSpeedX);
                } // Fl_Value_Input* RadialShooter_MaxInitialRotationalSpeedX
                { RadialShooter_MaxInitialRotationalSpeedY = new Fl_Value_Input(1265, 488, 70, 25, "Y Axis");
                RadialShooter_MaxInitialRotationalSpeedY->minimum(-10);
                RadialShooter_MaxInitialRotationalSpeedY->maximum(10);
                RadialShooter_MaxInitialRotationalSpeedY->step(0.1);
                RadialShooter_MaxInitialRotationalSpeedY->callback((Fl_Callback*)psEditorGUI_RadialShooter_SetMaxInitialRotationalSpeedY);
                } // Fl_Value_Input* RadialShooter_MaxInitialRotationalSpeedY
                { RadialShooter_MaxInitialRotationalSpeedZ = new Fl_Value_Input(1265, 518, 70, 25, "Z Axis");
                RadialShooter_MaxInitialRotationalSpeedZ->minimum(-10);
                RadialShooter_MaxInitialRotationalSpeedZ->maximum(10);
                RadialShooter_MaxInitialRotationalSpeedZ->step(0.1);
                RadialShooter_MaxInitialRotationalSpeedZ->callback((Fl_Callback*)psEditorGUI_RadialShooter_SetMaxInitialRotationalSpeedZ);
                } // Fl_Value_Input* RadialShooter_MaxInitialRotationalSpeedZ
                o->end();
              } // Fl_Group* o
              o->end();
            } // Fl_Group* o
            RadialShooterParameters->end();
          } // Fl_Group* RadialShooterParameters
          { Fl_Choice* o = new Fl_Choice(1129, 135, 150, 25, "Shooter Type");
            o->down_box(FL_BORDER_BOX);
            o->callback((Fl_Callback*)psEditorGUI_Shooter_SetType);
            o->menu(menu_Shooter);
          } // Fl_Choice* o
          o->end();
        } // Fl_Group* o
        { Fl_Group* o = new Fl_Group(904, 65, 490, 510, "Program");
          o->hide();
          { Program_Operators = new Fl_Browser(1034, 120, 150, 130, "Operators");
            Program_Operators->type(2);
            Program_Operators->callback((Fl_Callback*)psEditor_Program_OperatorsChanged);
            Program_Operators->align(FL_ALIGN_TOP);
          } // Fl_Browser* Program_Operators
          { Fl_Button* o = new Fl_Button(1194, 120, 130, 25, "New Force");
            o->callback((Fl_Callback*)psEditorGUI_Program_NewForce);
          } // Fl_Button* o
          { Fl_Button* o = new Fl_Button(1194, 155, 130, 25, "New Acceleration");
            o->callback((Fl_Callback*)psEditorGUI_Program_NewAcceleration);
          } // Fl_Button* o
          { Fl_Button* o = new Fl_Button(1194, 190, 130, 25, "New Fluid Friction");
            o->callback((Fl_Callback*)psEditorGUI_Program_NewFluidFriction);
          } // Fl_Button* o
          { Program_DeleteOperator = new Fl_Button(1194, 225, 130, 25, "Delete Operator");
            Program_DeleteOperator->callback((Fl_Callback*)psEditorGUI_Program_DeleteOperator);
          } // Fl_Button* Program_DeleteOperator
          { FluidFrictionParameters = new Fl_Group(924, 305, 360, 160, "Fluid Friction Parameters");
            FluidFrictionParameters->box(FL_DOWN_BOX);
            FluidFrictionParameters->align(FL_ALIGN_BOTTOM|FL_ALIGN_INSIDE);
            FluidFrictionParameters->hide();
            { Fl_Button* o = new Fl_Button(1164, 330, 90, 25, "Air");
              o->callback((Fl_Callback*)psEditorGUI_FluidFriction_Air);
            } // Fl_Button* o
            { Fl_Button* o = new Fl_Button(1164, 360, 90, 25, "Water");
              o->callback((Fl_Callback*)psEditorGUI_FluidFriction_Water);
            } // Fl_Button* o
            { FluidFriction_Density = new Fl_Value_Input(1069, 330, 80, 25, "Density");
              FluidFriction_Density->step(0.001);
              FluidFriction_Density->value(1.2929);
              FluidFriction_Density->callback((Fl_Callback*)psEditorGUI_FluidFriction_SetDensity);
            } // Fl_Value_Input* FluidFriction_Density
            { FluidFriction_Viscosity = new Fl_Value_Input(1069, 360, 80, 25, "Viscosity");
              FluidFriction_Viscosity->step(0.0001);
              FluidFriction_Viscosity->value(1.8e-005);
              FluidFriction_Viscosity->callback((Fl_Callback*)psEditorGUI_FluidFriction_SetViscosity);
            } // Fl_Value_Input* FluidFriction_Viscosity
            { FluidFriction_OverrideRadius = new Fl_Value_Input(1069, 390, 80, 25, "Override Radius");
              FluidFriction_OverrideRadius->maximum(10);
              FluidFriction_OverrideRadius->step(0.1);
              FluidFriction_OverrideRadius->callback((Fl_Callback*)psEditorGUI_FluidFriction_SetOverrideRadius);
            } // Fl_Value_Input* FluidFriction_OverrideRadius
            FluidFrictionParameters->end();
          } // Fl_Group* FluidFrictionParameters
          { ForceParameters = new Fl_Group(989, 305, 305, 160, "Force Parameters");
            ForceParameters->box(FL_DOWN_BOX);
            ForceParameters->align(FL_ALIGN_BOTTOM|FL_ALIGN_INSIDE);
            ForceParameters->hide();
            { Force_X = new Fl_Value_Input(1086, 335, 115, 25, "X");
              Force_X->tooltip("A constant force on the X-axis");
              Force_X->minimum(-1000);
              Force_X->maximum(1000);
              Force_X->step(0.1);
              Force_X->callback((Fl_Callback*)psEditorGUI_Force_SetX);
            } // Fl_Value_Input* Force_X
            { Force_Y = new Fl_Value_Input(1086, 365, 115, 25, "Y");
              Force_Y->tooltip("A constant force on the Y-axis");
              Force_Y->minimum(-1000);
              Force_Y->maximum(1000);
              Force_Y->step(0.1);
              Force_Y->callback((Fl_Callback*)psEditorGUI_Force_SetY);
            } // Fl_Value_Input* Force_Y
            { Force_Z = new Fl_Value_Input(1086, 395, 115, 25, "Z");
              Force_Z->tooltip("A constant force on the Z-axis");
              Force_Z->minimum(-1000);
              Force_Z->maximum(1000);
              Force_Z->step(0.1);
              Force_Z->callback((Fl_Callback*)psEditorGUI_Force_SetZ);
            } // Fl_Value_Input* Force_Z
            ForceParameters->end();
          } // Fl_Group* ForceParameters
          { AccelerationParameters = new Fl_Group(974, 305, 312, 160, "Acceleration Parameters");
            AccelerationParameters->box(FL_DOWN_BOX);
            AccelerationParameters->align(FL_ALIGN_BOTTOM|FL_ALIGN_INSIDE);
            AccelerationParameters->hide();
            { Acceleration_X = new Fl_Value_Input(1072, 335, 115, 25, "X");
              Acceleration_X->minimum(-10);
              Acceleration_X->maximum(10);
              Acceleration_X->step(0.1);
              Acceleration_X->callback((Fl_Callback*)psEditorGUI_Acceleration_SetX);
            } // Fl_Value_Input* Acceleration_X
            { Acceleration_Y = new Fl_Value_Input(1072, 365, 115, 25, "Y");
              Acceleration_Y->minimum(-10);
              Acceleration_Y->maximum(10);
              Acceleration_Y->step(0.1);
              Acceleration_Y->callback((Fl_Callback*)psEditorGUI_Acceleration_SetY);
            } // Fl_Value_Input* Acceleration_Y
            { Acceleration_Z = new Fl_Value_Input(1072, 395, 115, 25, "Z");
              Acceleration_Z->minimum(-10);
              Acceleration_Z->maximum(10);
              Acceleration_Z->step(0.1);
              Acceleration_Z->callback((Fl_Callback*)psEditorGUI_Acceleration_SetZ);
            } // Fl_Value_Input* Acceleration_Z
            AccelerationParameters->end();
          } // Fl_Group* AccelerationParameters
          o->end();
        } // Fl_Group* o
        ParameterTabs->end();
      } // Fl_Tabs* ParameterTabs
      { Fl_Group* o = new Fl_Group(719, 325, 185, 265);
        o->box(FL_DOWN_BOX);
        { Fl_Button* o = new Fl_Button(729, 340, 65, 30, "@>");
          o->tooltip("Reset\'s the start time (\"plays\" the effect from start)");
          o->callback((Fl_Callback*)psEditorGUI_ResetLayers);
        } // Fl_Button* o
        o->end();
      } // Fl_Group* o
      o->end();
    } // Fl_Tile* o
    UIMainWindow->end();
    UIMainWindow->resizable(UIMainWindow);
  } // Fl_Double_Window* UIMainWindow
}

void UserInterface::Show() {
  UIMainWindow->show();
}
