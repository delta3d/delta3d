****************************************************************************
Steps to get testAAR running in LMS:

1) Get a local test server running using some server application, such as XAMPP
2) Run WebPackager.exe passing the following command line arguments:
   a) The path (absolute or relative) to the SampleProfile.xml file
   b) The output directory (absolute or relative) to your local server's htdocs
      folder ending with /testAAR (i.e. C:\XAMPP\xampplite\htdocs\testAAR)
3) The password for the keystore is testLMS
4) Open http://localhost/testAAR/TestAARLmsLaunch.htm in a web browser
5) Press Start
   NOTE: Requires Java 1.6 JRE or higher to run the example

****************************************************************************
How to convert LMS utility example to your application:

1) Update SampleProfile.xml
   a) Change URL to the intended URL of your application
   b) Change all references of testAAR to your application name
   c) Update resources needed for your webpage that launches the application
   d) Change Delta3D, ThirdParty, and application libraries to ones needed by
      your application
   e) Change all resources to ones needed by your application
   f) Change general launch parameters to command line arguments for your
      application
   g) Change the objective list to objectives specific to your application

****************************************************************************
How to define tasks in an LMS application

1) Put the appropriate TaskActors in your map using STAGE
2) GameEventTaskActors are automatically marked complete when their
   associated GameEvent is triggered the Minimum Occurances amount of times
3) TaskActors can be manually marked complete using SetScore and SetComplete
4) TaskActors are automatically marked complete when the percentage of
   their subtasks is greater than or equal to their Passing Score property
5) Your application needs to detect whether it's being loaded by LMS or not
   (usually through command line arguments) and if it is being run through
   LMS, it has to have a dtLMS::LmsComponent added to the game manager and
   connected by calling ConnectToLms().
****************************************************************************
