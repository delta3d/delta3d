# Locate Delta3D
# This module defines
# DTCORE_LIBRARY
# DELTA3D_EXT_DIR
# DELTA3D_FOUND, if false, do not try to link to gdal 
# DELTA3D_INCLUDE_DIR, where to find the headers
#
# $DELTA3D_DIR is an environment variable that would
# correspond to the ./configure --prefix=$DELTA3D
#
# Created by David Guthrie. 

FIND_PATH(DELTA_DIR inc/dtCore/dt.h
    HINTS
    ${CMAKE_SOURCE_DIR}
    $ENV{DELTA_ROOT}
    $ENV{DELTA_INC}
    PATHS
    ~/Library/Frameworks
    /Library/Frameworks
    /usr/local
    /usr
    /sw # Fink
    /opt/local # DarwinPorts
    /opt/csw # Blastwave
    /opt
    [HKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControl\\Control\\Session\ Manager\\Environment;DELTA_ROOT]
    /usr/freeware/include
)

FIND_PATH(DELTA3D_INCLUDE_DIR NAMES dtCore/dt.h
    HINTS
       ${DELTA_DIR}
    PATH_SUFFIXES
       inc
       include
)

FIND_PATH( DELTA3D_LIB_DIR NAMES libdtCore.so libdtCore.dylib dtCore.lib .
    HINTS
       ${DELTA_DIR}
    PATH_SUFFIXES
       Build/lib
       Debug/lib
       Release/lib
       lib
)

#where to find the Delta3D "ext" folder.  Look for one of the headers that might be in there.
SET(DELTA3D_EXT_DIR ${DELTA3D_ROOT}/ext CACHE PATH "The root of the Delta3D external dependency folder")

IF(DELTA3D_EXT_DIR)
  #for aiding FIND_FILE() and FIND_PATH() searches
  SET(CMAKE_PREFIX_PATH ${CMAKE_PREFIX_PATH} ${DELTA3D_EXT_DIR})
  SET(CMAKE_INCLUDE_PATH ${CMAKE_INCLUDE_PATH} ${DELTA3D_EXT_DIR}/inc)
ENDIF(DELTA3D_EXT_DIR)

SET(DTUTIL_LIBRARY dtUtil)
SET(DTCORE_LIBRARY dtCore)
SET(DTABC_LIBRARY dtABC)
SET(DTDAL_LIBRARY dtDAL)
SET(DTDIRECTOR_LIBRARY dtDirector)
SET(DTDIRECTOR_NODE_LIBRARY dtDirectorNodes)
SET(DTDIRECTORQT_LIBRARY dtDirectorQt)
SET(DTAI_LIBRARY dtAI)
SET(DTGAME_LIBRARY dtGame)
SET(DTPHYSICS_LIBRARY dtPhysics)
SET(DTAUDIO_LIBRARY dtAudio)
SET(DTANIM_LIBRARY dtAnim)
SET(DTGUI_LIBRARY dtGUI)
SET(DTINSPECTORQT_LIBRARY dtInspectorQt)
SET(DTSCRIPT_LIBRARY dtScript)
SET(DTTERRAIN_LIBRARY dtTerrain)
SET(DTNET_LIBRARY dtNet)
SET(DTNETGM_LIBRARY dtNetGM)
SET(DTHLAGM_LIBRARY dtHLAGM)
SET(DTDIS_LIBRARY dtDIS)
SET(DTINPUT_PLIB_LIBRARY dtInputPLIB)
SET(DTACTORS_LIBRARY dtActors)
SET(DTANIM_LIBRARY dtAnim)
SET(DTLMS_LIBRARY dtLMS)
SET(DTQT_LIBRARY dtQt)
SET(STAGE_LIBRARY STAGE)
SET(TEST_ACTOR_LIBRARY testActorLibrary)
SET(TEST_GAME_ACTOR_LIBRARY testGameActorLibrary)
SET(FIREFIGHTER_DEMO_LIBRARY fireFighter)

IF (WIN32)
    SET(DTUTIL_LIBRARY_DEBUG dtUtild)
    SET(DTCORE_LIBRARY_DEBUG dtCored)
    SET(DTABC_LIBRARY_DEBUG dtABCd)
    SET(DTDAL_LIBRARY_DEBUG dtDALd)
    SET(DTDIRECTOR_LIBRARY_DEBUG dtDirectord)
    SET(DTDIRECTOR_NODE_LIBRARY_DEBUG dtDirectorNodesd)
    SET(DTDIRECTORQT_LIBRARY_DEBUG dtDirectorQtd)
    SET(DTAI_LIBRARY_DEBUG dtAId)
    SET(DTGAME_LIBRARY_DEBUG dtGamed)
    SET(DTPHYSICS_LIBRARY_DEBUG dtPhysicsd)
    SET(DTAUDIO_LIBRARY_DEBUG dtAudiod)
    SET(DTANIM_LIBRARY_DEBUG dtAnimd)
    SET(DTGUI_LIBRARY_DEBUG dtGUId)
    SET(DTINSPECTORQT_LIBRARY_DEBUG dtInspectorQtd)
    SET(DTSCRIPT_LIBRARY_DEBUG dtScriptd)
    SET(DTTERRAIN_LIBRARY_DEBUG dtTerraind)
    SET(DTNET_LIBRARY_DEBUG dtNetd)
    SET(DTNETGM_LIBRARY_DEBUG dtNetGMd)
    SET(DTHLAGM_LIBRARY_DEBUG dtHLAGMd)
    SET(DTDIS_LIBRARY_DEBUG dtDISd)
    SET(DTINPUT_PLIB_LIBRARY_DEBUG dtInputPLIBd)
    SET(DTACTORS_LIBRARY_DEBUG dtActorsd)
    SET(DTANIM_LIBRARY_DEBUG dtAnimd)
    SET(DTLMS_LIBRARY_DEBUG dtLMSd)
    SET(DTQT_LIBRARY_DEBUG dtQtd)
    SET(STAGE_LIBRARY_DEBUG STAGEd)
    SET(TEST_ACTOR_LIBRARY_DEBUG testActorLibraryd)
    SET(TEST_GAME_ACTOR_LIBRARY_DEBUG testGameActorLibraryd)
    SET(FIREFIGHTER_DEMO_LIBRARY_DEBUG fireFighterd)
ENDIF (WIN32)

SET(DELTA3D_FOUND "NO")
IF(DTCORE_LIBRARY AND DELTA3D_INCLUDE_DIR AND DELTA3D_LIB_DIR)
    SET(DELTA3D_FOUND "YES")
ENDIF(DTCORE_LIBRARY AND DELTA3D_INCLUDE_DIR AND DELTA3D_LIB_DIR)
