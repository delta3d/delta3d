# Build script for the testActorLibrary
import glob
import sys

# Import the variables defined in the global SConstruct build script.
Import ('*')

if OS == 'darwin':
   overrideShLink = '$LINKFLAGS -bundle -flat_namespace -undefined suppress'
   overrideShSuffix = '.so'
else:
   overrideShLink = ''
   overrideShSuffix = ''

# Grab all the sources from the DAL source directory.
sources = SGlob('*.cpp')

testActorLibraryDeps =['dtDAL', 'dtutil', 'dtcore', 'ode',
        'OpenThreads', 'osg', 'osgDB', 'osgParticle', 'osgTerrain', 'osgText', 'osgUtil',
        'osgGA', 'osgSim', 'osgFX', 'osgProducer', 'sg', 'ul', 'js',
        'Producer', 'tinyxml', 'opengl' ]

if OS == 'windows':
   testActorLibraryDeps += ['dtActors']

if OS == 'windows' :
   testActorLibraryDeps += [ 'dtsoarx', 'User32', 'Advapi32', 'Rpcrt4', 'Winmm', 'Gdi32' ]
elif OS == 'linux':
   testActorLibraryDeps += [ 'uuid', 'Xxf86vm' ]
elif OS == 'darwin':
   testActorLibraryDeps += [ 'CoreFoundation', 'IOKit', 'Carbon' ]

if(OS == 'windows' and mode == 'debug') :
	testActorLibrary = BuildLib( 'testActorLibraryd', sources, testActorLibraryDeps, ['DT_PLUGIN'], 
		overrideShLinkFlags = overrideShLink, overrideShLibSuffix = overrideShSuffix )
else :
	testActorLibrary = BuildLib( 'testActorLibrary', sources, testActorLibraryDeps, ['DT_PLUGIN'], 
		overrideShLinkFlags = overrideShLink, overrideShLibSuffix = overrideShSuffix )


if OS == 'darwin':
   Depends(testActorLibrary, libdtDAL)

Export('testActorLibrary')
