Import('*')

dtCoreSrcs = [ 	'base.cpp', 
		'camera.cpp', 
		'clouddome.cpp', 
		'cloudplane.cpp', 
		'compass.cpp', 
		'cui_openglrenderer.cpp', 
		'cui_openglshader.cpp', 
		'deltarendersurface.cpp', 
		'deltawin.cpp', 
		'effectmanager.cpp', 
		'enveffect.cpp', 
		'environment.cpp', 
		'ephemeris.cpp', 
		'flymotionmodel.cpp', 
		'globals.cpp', 
		'infinitelight.cpp', 
		'infiniteterrain.cpp', 
		'inputdevice.cpp', 
		'inputmapper.cpp', 
		'isector.cpp', 
		'joystick.cpp', 
		'keyboard.cpp', 
		'light.cpp', 
                'loadable.cpp',
		'logicalinputdevice.cpp', 
		'motionmodel.cpp', 
		'mouse.cpp', 
		'notify.cpp', 
		'object.cpp', 
		'orbitmotionmodel.cpp', 
		'particlesystem.cpp', 
		'physical.cpp', 
		'pnoise.cpp', 
		'pointaxis.cpp', 
		'positionallight.cpp', 
		'recorder.cpp', 
		'scene.cpp', 
		'skybox.cpp', 
		'skydome.cpp', 
		'skydomeshader.cpp', 
		'spotlight.cpp', 
		'stats.cpp', 
		'sunlightshader.cpp', 
		'system.cpp', 
		'terrain.cpp', 
                'timer.cpp',
		'tracker.cpp', 
		'transform.cpp', 
		'transformable.cpp', 
		'tripod.cpp', 
		'uidrawable.cpp', 
		'ufomotionmodel.cpp', 
		'walkmotionmodel.cpp' ]

env = env.Copy()

dtCoreLib = env.SharedLibrary( 'dtcore', dtCoreSrcs, LIBS=[ 'glgui', 'isense', 'ode', 'OpenThreads', 'osg', 'osgDB', 'osgGL2', 'osgParticle', 'osgTerrain', 'osgText', 'osgUtil', 'plibsg', 'plibul', 'plibjs', 'Producer', 'tinyxml' ] )

env.Install( '../../lib', dtCoreLib )
