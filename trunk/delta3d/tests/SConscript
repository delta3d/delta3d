# Build script for the basic sample application demonstrating map file IO.
import glob
import sys

# Import the variables defined in the global SConstruct build script.
Import ('*')

projectEnv = env.Copy()

sources = []

mainSources = glob.glob('*.cpp')

sources += mainSources;

projectSources = glob.glob('project/*Tests.cpp')

sources += projectSources;

proxySources =  glob.glob('proxy/*Test.cpp')

sources += proxySources;

deplibs = ['cppunit']

#convert libs to system name
deplibs = [ extLibs[lib] for lib in deplibs if extLibs.has_key(lib) ]

projectEnv.Append(LIBS = deplibs)

allTestProgram = '#tests/allTests'
projectTestProgram = '#tests/projectTests'
proxyTestProgram = '#tests/proxyTests'

if mode == 'debug':
   allTestProgram = '#tests/allTestsd'
   projectTestProgram = '#tests/projectTestsd'
   proxyTestProgram = '#tests/proxyTestsd'
   

projectEnv.Append(LIBS = deplibs + ['dtDAL', 'dtutil', 'dtaudio', 'dtabc', 'dtcore'])
app = projectEnv.Program(allTestProgram, sources)
projectapp = projectEnv.Program(projectTestProgram,  mainSources + projectSources)
proxyapp = projectEnv.Program(proxyTestProgram,  mainSources + proxySources)


dtCreateActorLibSources = [ 'project/dtCreateActorLib/ExampleActorLib.cpp', 'project/dtCreateActorLib/ExampleTestPropertyProxy.cpp' ];

if OS == 'darwin':
   overrideShLink = '$LINKFLAGS -bundle -flat_namespace -undefined suppress'
   overrideShSuffix = '.dylib'
else:
   overrideShLink = ''
   overrideShSuffix = ''

dtCreateActorsDeps = ['dtDAL']

dtCreateActorsLib = BuildLib( 'dtCreateActors', dtCreateActorLibSources, dtCreateActorsDeps, ['DT_PLUGIN'], 
	overrideShLinkFlags = overrideShLink, overrideShLibSuffix = overrideShSuffix )

# Grab all the sources from the dtActors source directory.
if (app == '[]') :
	result = 'false'
else :
	result = 'true'

if (result == 'false') :
	errorLog.write("Failed to build the map loader sample application.\n")

Return('result')
