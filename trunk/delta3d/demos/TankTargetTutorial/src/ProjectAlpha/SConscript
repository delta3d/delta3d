# Build script for the Game Manager module.
import sys
import glob

# Import the variables defined in the global SConstruct build script.
Import ('*')

# Grab all the sources from the source directory.
sources = SGlob('*.cpp')

tutorialLibDeps =[ 'dtGame', 'dtDAL', 'dtGUI', 'dtUtil', 'dtCore', 'dtAudio', 'dtABC', 'dtHLAGM', 
		'OpenThreads', 'osg', 'osgDB', 'osgParticle', 'osgTerrain', 'osgText', 'osgUtil', 
		'osgGA', 'osgSim', 'osgFX', 'osgProducer','gdal', 
        	'cal3d', 'xerces-c', 'openal',
		'Producer', 'tinyxml', 'opengl', 'CEGUIBase', 'CEGUIOpenGLRenderer', 'dtActors' ]

tutorialLibDeps += rtiLibs

defines = []

if OS == 'windows' :
   tutorialLibDeps += [ 'User32', 'Advapi32', 'Rpcrt4', 'Winmm', 'Gdi32' ]
   defines = ['TUTORIAL_TANK_EXPORT']
elif OS == 'linux':
   tutorialLibDeps += [ 'uuid', 'Xxf86vm' ]
elif OS == 'darwin':
   tutorialLibDeps += [ 'CoreFoundation', 'IOKit', 'Carbon' ]

projectAlphaLib = env.BuildLib( 'TutorialLibrary', sources, tutorialLibDeps, defines, 
                            prefixHeader = env['ENV']['DELTA_ROOT'] + '/inc/prefix/dtgameprefix.h' )

Export('projectAlphaLib')
