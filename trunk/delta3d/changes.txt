##############################
#                            #
# Delta3D: Version Changes   # 
#                            #
##############################

---------
| 1.4.0 |
---------
-added dtCore.InfiniteTerrain Line of Sight method

---------
| 1.3.1 |
---------

---------
| 1.3.0 |
---------

New Features
------------

-dtHLAGM: A networking component for the GameManager that support an Agile FOM interface using XML.

-Enhanced coordinate conversion code in dtHLAGM

-Brand new dtCore::SkyBox which support three render profiles: fixed function, cube map, and angular map. This refactor fixes the infamous ATI/SkyBox bug.

-Added Shader architecture - supports XML definition of Shaders to load OpenGL vertex and fragment(pixel) shaders

-Added Dead Reckoning GMComponent - added Actor helper object and dead reckoning component for the Game Manager architecture to tick and move objects with less actor updates (particularly useful for networked apps).

-Added BaseInputComponent - enables easy use of keyboard & mouse behavior in the GM using the recent changes to keyboard and mouse listeners.

-Added GameMeshActor - Like the StaticMeshActor. Provides a Game Actor that can load a mesh file.

-Renamed ProcessMessage() and SendMessage() on both the GameManager and on GMComponent to be more clear. On the GameManager, ProcessMessage is now called SendMessage() and the old SendMessage() is now called SendNetworkMessage(). On GMComponent, ProcessMessage() stays the same, but SendMessage() is now called DispatchNetworkMessage().

-Added a default invokable to GameActorProxy so you can register messages without having to create an invokable at all - just override GameActorProxy::ProcessMessage() like you would on a component.

-Massively enhanced Game Manager After Action Review capability
    o Finished ServerLoggerComponent and LogControllerComponent for full round trip communication
    o Added HUD & Help screen to testAAR - written in Crazy Eddie's GUI
    o Fixed several bugs related to time & speed factor in the record/playback
    o Support for repeatedly starting & stopping playback and/or record
    o Added keyframe support - ability to jump forward/backward to 'chapters'
    o Added display of message traffic, tags, keyframes, and task status (see below)
    o Renamed example from testLogger to testAAR to reflect new capabilities

-Added Task Actors to track a player's status
    o Added base Task Actors with name, timestamp, score, weight, and completion status
    o Added ability to nest Task Actors as ordered (blocking or failing) or rolled-up
    o Added Task Component to track tasks
    o Added new Actor property data type: Game Event. Game Events can be registered with the GameEventManager and then fired in the GM with the GameEventMessage.
    o Added TaskActorGameEvent that automatically listens for Game Events.
    o Added demonstration of Tasks to the testAAR example app including HUD.

-Added support for generic environments to the Game Manager with example implementation for dtCore::Weather

-Added interface for particle manipulation through code. Particles on the fly!

-The SoarXDrawable renderer in dtTerrain now auto-calculates it's memory buffer size.

-Started new Doxygen-generated example tutorials (testApp, testGUI).

-KeyboardListener and MouseListener classes will derive from a reference counted base class.

-Callbacks added via dtGUI::ScriptModule::AddCallback must now return bool, conforming to the signature defined by dtGUI::ScriptModule::HandlerFunctor (breaking change).

-Default Mouse and Keyboards class now use the chain of responsibility pattern for input handling.

-Keyboard's specialKeyPress and specialKeyRelease are now merged into keyPress and keyRelease (breaking change).

-All code referencing dtCore::MouseButton will now need to reference dtCore::Mouse::MouseButton (breaking change).

-To support the chain of responsibility pattern, ButtonListener::ButtonStateChanged changed its signature to: bool ButtonStateChanged(const Button* button, bool oldState, bool newState);
and AxisListener::AxisStateChanged changed its signature to: bool AxisStateChanged(const Axis* axis, double oldState, double newState, double delta) (breaking change).

-Set the dtCore::Scene's default gravity to -9.81 in the Z axis

-dtCore::Light now derives from dtCore::Transformable instead of dtCore::DeltaDrawable.

-DeltaDrawable::GetOSGNode is now a pure virtual interface function. Subclasses are responsible for storing their own osg::Node's and returning them via GetOSGNode.

-KeyboardListener and MouseListener are now reference counted (breaking change).

-KeyboardListener and MouseListener are abstract classes now (breaking change).

-dtABC::Application lost several member functions when its inheritance was changed with respect to keyboard and mouse callbacks.  It now supports one, for ease of use, which is dtABC::Application::KeyPressed.

-DeltaWin now throws exceptions if invalid input parameters are passed to its constructor.

-New unit tests for dtGUI.

-The member functions of Keyboard and Mouse listener classes now return a bool and receive a const Keyboard pointer or const Mouse pointer, respectively (breaking change).

- Mouse::ButtonPress changed to Mouse::ButtonDown. Mouse::ButtonRelease changed to Mouse::ButtonUp.
Both functions now take a MouseButton enum rather than an integer (breaking change).

-dtInspector now supports all three types of Lights.

-dtCore::Timer has bee modified to provide a high-level wrapper around osg::Timer (breaking change).

-dtGUI::ScriptModule now supports non-static callbacks.

-Squelched a warning from the Xerces parser if the user doesn't use a schema file.

-There are now Python bindings for dtUtil::Enumeration, dtDAL::DataType, and dtDAL::ActorProperty.

-Mouse and Keyboards can now be created in user code.

-dtCore::EnvEffet is now an abstract class. Repaint is pure virtual (breaking change).

-dtCore::EffectListener is now an abstract class (EffectAdded and EffectRemoved are pure virtual). The class is now also referenced counted (breaking changes).

-The unit tests now build by default when using the SCons build system.

-Viewer now can load and display Map files.

-EffectManager has been refactored to allow extensible DetonationTypes by string. Small breaking change: the deprecated function "DetonationType Detonation::GetType() const" is now "void Detonation::GetType(DetonationType& type) const" is order to let the GetType with no arguments return the string DetonationType.

-Added basic Python bindings for dtTerrain::Terrain and dtTerrain::GeoCoordinates.

-Added ability to change the dtUtil::Log filename (contribued by Isdale).

-Added dtUtil/version.h which allows users to test for the working version of Delta3D at compile time or at runtime.

-Mouse's members functions buttonPress and buttonRelease have been renamed ButtonDown and ButtonUp to be consistent with our style guide and not conflict with #defines in X11 headers. Similarly, Keyboard's keyPress and keyRelease have been changed to KeyDown and KeyUp.

-dtTerrain now has API added to control if the terrain should be rendered with fog on/off.

-Added basic line of sight calculation in dtTerrain (courtesy of Jerry Isdale).

-testRecorder's "initialize" function is deprecated in favor of "Initialize" per our style guide.

-Public data members in dtCore::SunlightShader & dtCore::SkydomeShader are now private with accessors (breaking change).

-New build script options for Linux:
  bindir=install directory for exectuables (overrides prefix)
  includedir=install directory for headers (overrides prefix)
  libdir=install directory for libraries (overrides prefix)

-New data package 1.3.0

-Mouse's 3rd axis is now updated in response to mouse scrolling.

Bug Fixes
---------

-All reference counted classes now have protected destructors (breaking change).

-OpenAL buffers are now being properly intialized. This fixes a problem on some sound cards where two sounds could not be played at once.

- Replaced dirt.ive in example data with simple_terrain.ive in examples and tests since dirt.ive was causing issues with CEGUI.

-InfiniteTerrain now supports collisions with cylinders.

-Globals actors can now be deleted from STAGE via the global actor menu using the toolbar 'X' button.

-CEGUI stuff can be properly shutdown now by calling CEUIDrawable::ShutdownGUI.

-Fixed bug in dtTerrain that results in an invisible terrain if fog is turned off.

-Fixed bug that caused the dtABC::Application not to use the ChangeDisplayResolution attribute in the config.xml file.

-Fixed bug in InfiniteLight which would result returning the wrong Azimuth and Elevation values.

-Fixed bug that would case a dtABC::State not to have it's ShutDown() method called.

-An exception in DeltaWin's constructor no longer can cause bad memory to live in the MANAGEMENT_LAYER vector.

-Changing display resolution in fullscreen mode works both ways now.

-InfiniteLight::GetAzimuthElevation is now returning correct values.

-Cleaned up FPSMotionModel.  Integrated changes from the user "gcw".

-Transformables now correctly collide with InfiniteTerrain.
  
-Replaced all osg::ref_ptrs holding Delta3D classes with dtCore::RefPtr. Fixes a bug in VS2005 as well.

-STAGE no longer forces all of the textures units on. Fixes a case with using terrex terrains where the scene would render very strangely, i.e. flashing colors, etc.
  
---------
| 1.2.0 |
---------

New Features
------------
-Coorindate system conversion utilities 

-Support for new dependency versions
 -OpenSceneGraph 1.0
 -OpenAL 0.0.8
 -Boost 1.33 and 1.33.1
 -CEGUI 0.4.1

-New data package 1.2.0

-MacOS X builds will generate application bundles (requires pre-release of SCons 0.97)

-Mousewheel support in dtGUI

-New build script options:
  cpppath=additional include directories (comma delimited)
  libpath=additional library directories (comma delimited)

Bug Fixes
---------
-Collision geometry is correctly set immediately after calls to SetCollisionBox, etc.
 (previously this did not happen until the first PreFrame).

-Plugged memory leak when using database paging.

-Removed dependency on DELTA_ROOT environment variable when loading maps.

-dtHLA::Entity::LoadFile works correctly in Python.

-Can add InfiniteTerrains to the Scene in Python.

-Fixed examples/testPython/testpythongui.py example (using Delta3D w/ Tkinter) to work on
 Windows and Linux.
 
-Producer keyboard events are properly injected into dtGUI.

-Python bindings work on MacOS X.

-Many little build scripts fixes, should help MacOS X and older versions of gcc.

-dtGUI responds correctly to Producer window size changes

---------
| 1.1.0 |
---------

New Features
------------
-The GameManager. The new dtGame namespace can be used to easily communicate
 between actors in your game. It also provides an entry point for After-Action
 Review and rules enforcement.

-dtTerrain has been refactored. The whole entire reader,
 renderer, terrain, and tile architecture is new since 1.0.0.

-dtCore::Camera can now be enabled or disabled.

-Map loading through dtABC::BaseABC::LoadMap will automciatlly hook your map up 
 with the default Scene and also set the default DeltaWin to any Cameras in the
 map.

-Bezier curves can now be created and edited directly in STAGE.

-dtCore::System now has pause functionality.

-Added support for Triggers and Actions, with associated Actor Proxies in 
 dtActors.

-Tripod Actor Proxy support in dtActors.

-dtGUI::CEUIDrawable can now have children DeltaDrawables. This places the 
 children in the same coorindate system as the 2D GUI.

-dtDAL/tree.h moved to dtUtil/tree.h.

-Added ability to set collision bits and collision groups. This allows selective
 collisions between classes or instances. Especially useful for ProximityTrigger.

-dtABC::StateManager::EventType is now public. This means one can listen for 
 state transition events.

-Added TerraPage support to the Viewer.

-testTerrain now uses models from the Delta3D Asset Library for vegetation 
 placement.

-New dependency package including InterSense SDK recompiled for MSVS 2003 & PLIB
 headers moved to a subdirectory.

-New data package 1.1.0.

Bug Fixes
---------
-testNetwork client geometry is now removed from Scene when the client disconnects.

-Fixed an occassional crash in testNetwork when a client connects.

-All DeltaDrawables now contain normal pointers to their parent Scene instead of
 RefPtrs. The allows the Scene to be properly destroyed without circular 
 references.

-Fixed flickering when two Cameras overlapped on one Window.

-Fixed incorrectly shaded SOARX terrain in dtTerrain.

-Fixed geometry seams in dtTerrain.

-Setting data file path list to contain $DELTA_DATA/gui will allow proper
 loading of all CEGUI elements.

-Updated all MSVS solultions to have correct dependencies.

-Fixed nearly all warnings on MSVC.

-Python bindings for Map::FindProxies now works. 
 Check out examples/testMap/testmap.py!

---------
| 1.0.0 |
---------
New Features:
-Now keeping better track of changes.
-Added support for loading TerraPage files.
-dtNet multiplayer networking has been implemented.
-Replaced TinyXML with Xerces XML.
-SCons and MSVC both output object files to the same directories.
-Build system now supports 'scons prefix=/path/to/your/dir install'
-All XML parsing now checks against schemas.
-Deprecated methods have been removed from the API.
-Updated all Python bindings to include dtUtil, dtDAL, and osg data types such
 as Vec3 and Matrix.
-Matrix Utilities are now confirmed to be "row major".
-Closing the DeltaWin now exits the applications by default.
-The Recorder class has been completely rewritten so that any class can be
 recorded, without the need for multiple inheritance.
-testRecorder example has been added.
-Fixed Statistics bug that caused Linux applications to crash.
-Noise classes have been added to dtUtil.
-Changed StateManager's XML schema to require an Event tag to have the 'Type' 
 attribute.
-testNetwork now supports multiple players.
-dtDAL string utilities are now located in dtUtil.
-Moved Xerces utilities into dtUtil/xercesutils.h.
-dtDAL::Exception has been moved to dtUtil.
-Combined dtDAL::IntersectionQuery's functionality into dtCore::Isector.
-Added testBumpMap example.
-Added testShaders example.
-Terrain rendering has been rearchitected and implemented as "dtTerrain".
-SOARX terrain has been merged into dtTerrain.
-GENETICS has been merged into dtTerrain.
-Added additional Python examples (testSound.py, testMap.py)

Bug Fixes:
-Fixed crash on exit after using a shader.
-A Windows dtHLA module crash on exit is fixed with the latest RTI-s version.
-Crash on exit from adding shaders to a Scene is fixed by using the latest NVidia drivers.
-Window Installer now doesn't change system fonts when un-installed.
-Fixed a bug that cound cause the StateManager to become invalid after parsing a file.
-Fixed bug that caused the motion models not to work in the Viewer.
-Fixed bug that would cause the Particle Editor to crash with multiple layers and a Program assigned.
-Fixes have been submitted to ReplicantBody to correctly ground-clamp the character.
-Many small bugs fixed and optimizations made.

---------
| 0.9.2 |
---------
Bug fixes:
-Start Menu icon for editor now loads the app correctly
-Can now add Camera's as children of other Transformables
-Fixed error in sigslot.h on linux causing apps to hang
-Enabled documentation building via SCons: 'scons doc'
-Changed dtCore::Notify calls to use dtUtil::Log
 (dtCore::Notify soon to be deprecated)
-testWin now uses dtGUI
-All examples & utilities now build to the bin folder
-New data package dt_data_0.2.1
-Make some changes to help gcc3.x users.

---------
| 0.9.1 |
---------
New Features:
-Added editor!
-Added dtDAL, dtActors
-Added examples: testMap, testActorLibrary, testStateManager
-Added dtGUI::ScriptModule
-Deprecated sg.lib and ul.lib functionality

---------
| 0.9.0 |
---------

New Features:
-Added dtGUI using CEGUI (will replace glGUI)
-Added Xerces XML parser (will replace TinyXML)
-Updated for OSG 0.9.9
-New StateManager in dtABC
-New example: testSOARX
-Moved Visual Studio files to the VisualStudio directory

Major Bug Fixes:
- dtAudio now works on Linux!
- Fixed bug with relocating a collision shape

---------
| 0.8.6 |
---------

Misc
- Updated python bindings to reflect changes in Scene and Camera classes.
- Removed default "-Wall" in SCons build until we can remove all the
  silly warnings.

Bug fixes:
- SCons now links with GDAL & osgSim for HLA-related libs+apps.
- SCons won't exit if RTI environment variables aren't found (they are
  optional anyways!)
- SCons exits nicely if the DELTA environment variables aren't found.
- Fixed bug with clamping of particle effects in HLA environments.

---------
| 0.8.5 |
---------

New features:
- Scaling, non-uniform and uniform
- Brand new Linux build system using SCons (http://www.scons.org)
  (Windows support for a SCons Delta3D build coming soon!)
- Can have multiple cameras and multiple windows
- Added a dtCore::Timer to compensate for inaccurate osg::Timer in osg0.9.8
- Created a dtCore::RefPtr based on the osg::ref_ptr
- dtScript::Script class has moved to dtScript::ScriptManager
- Camera field of view controls
- Microsoft Visual Studio Project Template for Delta3D Applications

Bug fixes:
- Fixed NaN matrix error when using Characters on certain platforms.
  (Bug 1115629)
- Our TinyXML lib now does not conflict with CAL3D's integrated TinyXML lib.
  (Bug 1068290)

 ---
|0.8|
 ---

BIG change in the hierarchy! 
See release notes online for more detail.

New features: 
-family of Light classes
-Loadable class 
-DeltaDrawable::RenderProxyNode
-Object::RecenterGeometryUponLoad
-DeprecationMgr class
-Domain class
-MatrixUtil class
-PolarDecomposition class
-Python Script class
-Viewer now has icons

Bug fixes:
-Auto-collision geometry ( with SetCollisionBox, SetCollisionSphere, 
 SetCollisionMesh, SetCollisionCappedCylinder should all generate correct
 collision geometry now. (Bug 1110847)
-All drawables render fine under Linux with auto-collision geometry.
 (Bug 1068805)
-Viewer: now you can switch between recently opened files fine
-testEffects: works on Linux (Bug 1059177)
-Chracters do not cause other textures  in scene to disappear (Bug 1075403)
-hlaStealthViewer does not crash after exiting a concurrent testHLA 
 (Bug 1068186)
-And many many many more!


